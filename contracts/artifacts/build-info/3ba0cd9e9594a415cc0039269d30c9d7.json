{
	"id": "3ba0cd9e9594a415cc0039269d30c9d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WinnerList_Airdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\n\n/**\n * @title AirdropContract\n * @dev Bu kontrat, belirli adreslere ERC20 token airdrop'u yapılmasını sağlar.\n */\ncontract AirdropContract is Ownable {\n    using SafeERC20 for IERC20;\n\n    /// @notice Airdrop yapılacak token adresi\n    IERC20 public token;\n\n    /**\n     * @dev Kontratı başlatır ve airdrop yapılacak token adresini belirler.\n     * @param _token Airdrop yapılacak token adresi\n     */\n    constructor(IERC20 _token) Ownable(msg.sender) {\n        require(address(_token) != address(0), \"Token address cannot be zero.\");\n        token = _token;\n    }\n\n    /**\n     * @notice Admin tarafından belirlenen adreslere airdrop yapar.\n     * @dev Sadece admin bu işlemi gerçekleştirebilir.\n     * @param recipients Airdrop yapılacak adreslerin listesi\n     * @param amounts Her bir adres için airdrop miktarlarının listesi\n     */\n    function airdrop(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner {\n        require(recipients.length == amounts.length, \"Recipients and amounts length mismatch.\");\n        \n        // Airdrop yapılacak adreslere token gönderimi\n        for (uint256 i = 0; i < recipients.length; i++) {\n            token.safeTransfer(recipients[i], amounts[i]);\n        }\n    }\n\n    /**\n     * @notice Token adresini günceller.\n     * @dev Sadece admin bu işlemi gerçekleştirebilir.\n     * @param _token Yeni token adresi\n     */\n    function setToken(IERC20 _token) external onlyOwner {\n        require(address(_token) != address(0), \"Token address cannot be zero.\");\n        token = _token;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/WinnerList_Airdrop.sol": {
				"AirdropContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "airdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Bu kontrat, belirli adreslere ERC20 token airdrop'u yapılmasını sağlar.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"airdrop(address[],uint256[])": {
								"details": "Sadece admin bu işlemi gerçekleştirebilir.",
								"params": {
									"amounts": "Her bir adres için airdrop miktarlarının listesi",
									"recipients": "Airdrop yapılacak adreslerin listesi"
								}
							},
							"constructor": {
								"details": "Kontratı başlatır ve airdrop yapılacak token adresini belirler.",
								"params": {
									"_token": "Airdrop yapılacak token adresi"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setToken(address)": {
								"details": "Sadece admin bu işlemi gerçekleştirebilir.",
								"params": {
									"_token": "Yeni token adresi"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "AirdropContract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WinnerList_Airdrop.sol\":512:1974  contract AirdropContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WinnerList_Airdrop.sol\":810:969  constructor(IERC20 _token) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/WinnerList_Airdrop.sol\":845:855  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/WinnerList_Airdrop.sol\":902:903  0 */\n  0x00\n    /* \"contracts/WinnerList_Airdrop.sol\":875:904  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/WinnerList_Airdrop.sol\":883:889  _token */\n  dup2\n    /* \"contracts/WinnerList_Airdrop.sol\":875:904  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/WinnerList_Airdrop.sol\":867:938  require(address(_token) != address(0), \"Token address cannot be zero.\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/WinnerList_Airdrop.sol\":956:962  _token */\n  dup1\n    /* \"contracts/WinnerList_Airdrop.sol\":948:953  token */\n  0x01\n  0x00\n    /* \"contracts/WinnerList_Airdrop.sol\":948:962  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/WinnerList_Airdrop.sol\":810:969  constructor(IERC20 _token) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/WinnerList_Airdrop.sol\":512:1974  contract AirdropContract is Ownable {... */\n  jump(tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_36\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_23:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_38\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_24:\n    /* \"#utility.yul\":771:809   */\n  tag_40\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_41:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_25:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_43\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_46\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1118:1237   */\ntag_45:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_47\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1520   */\ntag_26:\n    /* \"#utility.yul\":1489:1513   */\n  tag_49\n    /* \"#utility.yul\":1507:1512   */\n  dup2\n    /* \"#utility.yul\":1489:1513   */\n  tag_22\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1484:1487   */\n  dup3\n    /* \"#utility.yul\":1477:1514   */\n  mstore\n    /* \"#utility.yul\":1402:1520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1748   */\ntag_9:\n    /* \"#utility.yul\":1619:1623   */\n  0x00\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1646:1655   */\n  dup3\n    /* \"#utility.yul\":1642:1660   */\n  add\n    /* \"#utility.yul\":1634:1660   */\n  swap1\n  pop\n    /* \"#utility.yul\":1670:1741   */\n  tag_51\n    /* \"#utility.yul\":1738:1739   */\n  0x00\n    /* \"#utility.yul\":1727:1736   */\n  dup4\n    /* \"#utility.yul\":1723:1740   */\n  add\n    /* \"#utility.yul\":1714:1720   */\n  dup5\n    /* \"#utility.yul\":1670:1741   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1526:1748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1754:1923   */\ntag_27:\n    /* \"#utility.yul\":1838:1849   */\n  0x00\n    /* \"#utility.yul\":1872:1878   */\n  dup3\n    /* \"#utility.yul\":1867:1870   */\n  dup3\n    /* \"#utility.yul\":1860:1879   */\n  mstore\n    /* \"#utility.yul\":1912:1916   */\n  0x20\n    /* \"#utility.yul\":1907:1910   */\n  dup3\n    /* \"#utility.yul\":1903:1917   */\n  add\n    /* \"#utility.yul\":1888:1917   */\n  swap1\n  pop\n    /* \"#utility.yul\":1754:1923   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1929:2108   */\ntag_28:\n    /* \"#utility.yul\":2069:2100   */\n  0x546f6b656e20616464726573732063616e6e6f74206265207a65726f2e000000\n    /* \"#utility.yul\":2065:2066   */\n  0x00\n    /* \"#utility.yul\":2057:2063   */\n  dup3\n    /* \"#utility.yul\":2053:2067   */\n  add\n    /* \"#utility.yul\":2046:2101   */\n  mstore\n    /* \"#utility.yul\":1929:2108   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2480   */\ntag_29:\n    /* \"#utility.yul\":2256:2259   */\n  0x00\n    /* \"#utility.yul\":2277:2344   */\n  tag_55\n    /* \"#utility.yul\":2341:2343   */\n  0x1d\n    /* \"#utility.yul\":2336:2339   */\n  dup4\n    /* \"#utility.yul\":2277:2344   */\n  tag_27\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2270:2344   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2446   */\n  tag_56\n    /* \"#utility.yul\":2442:2445   */\n  dup3\n    /* \"#utility.yul\":2353:2446   */\n  tag_28\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2471:2473   */\n  0x20\n    /* \"#utility.yul\":2466:2469   */\n  dup3\n    /* \"#utility.yul\":2462:2474   */\n  add\n    /* \"#utility.yul\":2455:2474   */\n  swap1\n  pop\n    /* \"#utility.yul\":2114:2480   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2486:2905   */\ntag_15:\n    /* \"#utility.yul\":2652:2656   */\n  0x00\n    /* \"#utility.yul\":2690:2692   */\n  0x20\n    /* \"#utility.yul\":2679:2688   */\n  dup3\n    /* \"#utility.yul\":2675:2693   */\n  add\n    /* \"#utility.yul\":2667:2693   */\n  swap1\n  pop\n    /* \"#utility.yul\":2739:2748   */\n  dup2\n    /* \"#utility.yul\":2733:2737   */\n  dup2\n    /* \"#utility.yul\":2729:2749   */\n  sub\n    /* \"#utility.yul\":2725:2726   */\n  0x00\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2710:2727   */\n  add\n    /* \"#utility.yul\":2703:2750   */\n  mstore\n    /* \"#utility.yul\":2767:2898   */\n  tag_58\n    /* \"#utility.yul\":2893:2897   */\n  dup2\n    /* \"#utility.yul\":2767:2898   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2759:2898   */\n  swap1\n  pop\n    /* \"#utility.yul\":2486:2905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/WinnerList_Airdrop.sol\":512:1974  contract AirdropContract is Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WinnerList_Airdrop.sol\":512:1974  contract AirdropContract is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x144fa6d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x67243482\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WinnerList_Airdrop.sol\":1808:1972  function setToken(IERC20 _token) external onlyOwner {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/WinnerList_Airdrop.sol\":1255:1647  function airdrop(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/WinnerList_Airdrop.sol\":635:654  IERC20 public token */\n    tag_8:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WinnerList_Airdrop.sol\":1808:1972  function setToken(IERC20 _token) external onlyOwner {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/WinnerList_Airdrop.sol\":1905:1906  0 */\n      0x00\n        /* \"contracts/WinnerList_Airdrop.sol\":1878:1907  address(_token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WinnerList_Airdrop.sol\":1886:1892  _token */\n      dup2\n        /* \"contracts/WinnerList_Airdrop.sol\":1878:1907  address(_token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/WinnerList_Airdrop.sol\":1870:1941  require(address(_token) != address(0), \"Token address cannot be zero.\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/WinnerList_Airdrop.sol\":1959:1965  _token */\n      dup1\n        /* \"contracts/WinnerList_Airdrop.sol\":1951:1956  token */\n      0x01\n      0x00\n        /* \"contracts/WinnerList_Airdrop.sol\":1951:1965  token = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1808:1972  function setToken(IERC20 _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/WinnerList_Airdrop.sol\":1255:1647  function airdrop(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/WinnerList_Airdrop.sol\":1389:1396  amounts */\n      dup2\n      dup2\n        /* \"contracts/WinnerList_Airdrop.sol\":1389:1403  amounts.length */\n      swap1\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1368:1378  recipients */\n      dup5\n      dup5\n        /* \"contracts/WinnerList_Airdrop.sol\":1368:1385  recipients.length */\n      swap1\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1368:1403  recipients.length == amounts.length */\n      eq\n        /* \"contracts/WinnerList_Airdrop.sol\":1360:1447  require(recipients.length == amounts.length, \"Recipients and amounts length mismatch.\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/WinnerList_Airdrop.sol\":1528:1537  uint256 i */\n      0x00\n        /* \"contracts/WinnerList_Airdrop.sol\":1523:1641  for (uint256 i = 0; i < recipients.length; i++) {... */\n    tag_44:\n        /* \"contracts/WinnerList_Airdrop.sol\":1547:1557  recipients */\n      dup5\n      dup5\n        /* \"contracts/WinnerList_Airdrop.sol\":1547:1564  recipients.length */\n      swap1\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1543:1544  i */\n      dup2\n        /* \"contracts/WinnerList_Airdrop.sol\":1543:1564  i < recipients.length */\n      lt\n        /* \"contracts/WinnerList_Airdrop.sol\":1523:1641  for (uint256 i = 0; i < recipients.length; i++) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/WinnerList_Airdrop.sol\":1585:1630  token.safeTransfer(recipients[i], amounts[i]) */\n      tag_47\n        /* \"contracts/WinnerList_Airdrop.sol\":1604:1614  recipients */\n      dup6\n      dup6\n        /* \"contracts/WinnerList_Airdrop.sol\":1615:1616  i */\n      dup4\n        /* \"contracts/WinnerList_Airdrop.sol\":1604:1617  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n    tag_48:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_51:\n        /* \"contracts/WinnerList_Airdrop.sol\":1619:1626  amounts */\n      dup5\n      dup5\n        /* \"contracts/WinnerList_Airdrop.sol\":1627:1628  i */\n      dup5\n        /* \"contracts/WinnerList_Airdrop.sol\":1619:1629  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_50\n      jump\t// in\n    tag_53:\n    tag_52:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/WinnerList_Airdrop.sol\":1585:1590  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WinnerList_Airdrop.sol\":1585:1603  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"contracts/WinnerList_Airdrop.sol\":1585:1630  token.safeTransfer(recipients[i], amounts[i]) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"contracts/WinnerList_Airdrop.sol\":1566:1569  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1523:1641  for (uint256 i = 0; i < recipients.length; i++) {... */\n      jump(tag_44)\n    tag_45:\n      pop\n        /* \"contracts/WinnerList_Airdrop.sol\":1255:1647  function airdrop(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_56\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_64\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/WinnerList_Airdrop.sol\":635:654  IERC20 public token */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_71\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6550:7270  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6630:6648  uint256 returnSize */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6658:6677  uint256 returnValue */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6796:6800  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6793:6794  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6786:6790  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6780:6791  mload(data) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6773:6777  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6767:6771  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6763:6778  add(data, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6760:6761  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6753:6758  token */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6746:6751  gas() */\n      gas\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6741:6801  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6853:6860  success */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6843:7019  if iszero(success) {... */\n      tag_82\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6897:6901  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6891:6902  mload(0x40) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6942:6958  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6939:6940  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6934:6937  ptr */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6919:6959  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6988:7004  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6983:6986  ptr */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6976:7005  revert(ptr, returndatasize()) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6843:7019  if iszero(success) {... */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7046:7062  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7032:7062  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7096:7097  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7090:7098  mload(0) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7075:7098  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6712:7108  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7136:7137  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7122:7132  returnSize */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7122:7137  returnSize == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7122:7190  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_83\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7189:7190  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7174:7185  returnValue */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7174:7190  returnValue != 1 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7122:7190  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_84)\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7170:7171  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7148:7153  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7140:7166  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7140:7171  address(token).code.length == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7122:7190  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7118:7264  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7246:7251  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7213:7253  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":7118:7264  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6620:7270  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":6550:7270  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_88:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_89:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_90:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_91:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_121\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_90\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:678   */\n    tag_92:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_123\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_91\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:834   */\n    tag_93:\n        /* \"#utility.yul\":771:809   */\n      tag_125\n        /* \"#utility.yul\":803:808   */\n      dup2\n        /* \"#utility.yul\":771:809   */\n      tag_92\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":764:769   */\n      dup2\n        /* \"#utility.yul\":761:810   */\n      eq\n        /* \"#utility.yul\":751:828   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":824:825   */\n      0x00\n        /* \"#utility.yul\":821:822   */\n      dup1\n        /* \"#utility.yul\":814:826   */\n      revert\n        /* \"#utility.yul\":751:828   */\n    tag_126:\n        /* \"#utility.yul\":684:834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":840:1007   */\n    tag_94:\n        /* \"#utility.yul\":900:905   */\n      0x00\n        /* \"#utility.yul\":938:944   */\n      dup2\n        /* \"#utility.yul\":925:945   */\n      calldataload\n        /* \"#utility.yul\":916:945   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1001   */\n      tag_128\n        /* \"#utility.yul\":995:1000   */\n      dup2\n        /* \"#utility.yul\":954:1001   */\n      tag_93\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":840:1007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1013:1370   */\n    tag_11:\n        /* \"#utility.yul\":1086:1092   */\n      0x00\n        /* \"#utility.yul\":1135:1137   */\n      0x20\n        /* \"#utility.yul\":1123:1132   */\n      dup3\n        /* \"#utility.yul\":1114:1121   */\n      dup5\n        /* \"#utility.yul\":1110:1133   */\n      sub\n        /* \"#utility.yul\":1106:1138   */\n      slt\n        /* \"#utility.yul\":1103:1222   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1141:1220   */\n      tag_131\n      tag_88\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1103:1222   */\n    tag_130:\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1286:1353   */\n      tag_132\n        /* \"#utility.yul\":1345:1352   */\n      dup5\n        /* \"#utility.yul\":1336:1342   */\n      dup3\n        /* \"#utility.yul\":1325:1334   */\n      dup6\n        /* \"#utility.yul\":1321:1343   */\n      add\n        /* \"#utility.yul\":1286:1353   */\n      tag_94\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1276:1353   */\n      swap2\n      pop\n        /* \"#utility.yul\":1232:1363   */\n      pop\n        /* \"#utility.yul\":1013:1370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1376:1493   */\n    tag_95:\n        /* \"#utility.yul\":1485:1486   */\n      0x00\n        /* \"#utility.yul\":1482:1483   */\n      dup1\n        /* \"#utility.yul\":1475:1487   */\n      revert\n        /* \"#utility.yul\":1499:1616   */\n    tag_96:\n        /* \"#utility.yul\":1608:1609   */\n      0x00\n        /* \"#utility.yul\":1605:1606   */\n      dup1\n        /* \"#utility.yul\":1598:1610   */\n      revert\n        /* \"#utility.yul\":1622:1739   */\n    tag_97:\n        /* \"#utility.yul\":1731:1732   */\n      0x00\n        /* \"#utility.yul\":1728:1729   */\n      dup1\n        /* \"#utility.yul\":1721:1733   */\n      revert\n        /* \"#utility.yul\":1762:2330   */\n    tag_98:\n        /* \"#utility.yul\":1835:1843   */\n      0x00\n        /* \"#utility.yul\":1845:1851   */\n      dup1\n        /* \"#utility.yul\":1895:1898   */\n      dup4\n        /* \"#utility.yul\":1888:1892   */\n      0x1f\n        /* \"#utility.yul\":1880:1886   */\n      dup5\n        /* \"#utility.yul\":1876:1893   */\n      add\n        /* \"#utility.yul\":1872:1899   */\n      slt\n        /* \"#utility.yul\":1862:1984   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1903:1982   */\n      tag_138\n      tag_95\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1862:1984   */\n    tag_137:\n        /* \"#utility.yul\":2016:2022   */\n      dup3\n        /* \"#utility.yul\":2003:2023   */\n      calldataload\n        /* \"#utility.yul\":1993:2023   */\n      swap1\n      pop\n        /* \"#utility.yul\":2046:2064   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2038:2044   */\n      dup2\n        /* \"#utility.yul\":2035:2065   */\n      gt\n        /* \"#utility.yul\":2032:2149   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2068:2147   */\n      tag_140\n      tag_96\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2032:2149   */\n    tag_139:\n        /* \"#utility.yul\":2182:2186   */\n      0x20\n        /* \"#utility.yul\":2174:2180   */\n      dup4\n        /* \"#utility.yul\":2170:2187   */\n      add\n        /* \"#utility.yul\":2158:2187   */\n      swap2\n      pop\n        /* \"#utility.yul\":2236:2239   */\n      dup4\n        /* \"#utility.yul\":2228:2232   */\n      0x20\n        /* \"#utility.yul\":2220:2226   */\n      dup3\n        /* \"#utility.yul\":2216:2233   */\n      mul\n        /* \"#utility.yul\":2206:2214   */\n      dup4\n        /* \"#utility.yul\":2202:2234   */\n      add\n        /* \"#utility.yul\":2199:2240   */\n      gt\n        /* \"#utility.yul\":2196:2324   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2243:2322   */\n      tag_142\n      tag_97\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2196:2324   */\n    tag_141:\n        /* \"#utility.yul\":1762:2330   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2353:2921   */\n    tag_99:\n        /* \"#utility.yul\":2426:2434   */\n      0x00\n        /* \"#utility.yul\":2436:2442   */\n      dup1\n        /* \"#utility.yul\":2486:2489   */\n      dup4\n        /* \"#utility.yul\":2479:2483   */\n      0x1f\n        /* \"#utility.yul\":2471:2477   */\n      dup5\n        /* \"#utility.yul\":2467:2484   */\n      add\n        /* \"#utility.yul\":2463:2490   */\n      slt\n        /* \"#utility.yul\":2453:2575   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2494:2573   */\n      tag_145\n      tag_95\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2453:2575   */\n    tag_144:\n        /* \"#utility.yul\":2607:2613   */\n      dup3\n        /* \"#utility.yul\":2594:2614   */\n      calldataload\n        /* \"#utility.yul\":2584:2614   */\n      swap1\n      pop\n        /* \"#utility.yul\":2637:2655   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2629:2635   */\n      dup2\n        /* \"#utility.yul\":2626:2656   */\n      gt\n        /* \"#utility.yul\":2623:2740   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2659:2738   */\n      tag_147\n      tag_96\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2623:2740   */\n    tag_146:\n        /* \"#utility.yul\":2773:2777   */\n      0x20\n        /* \"#utility.yul\":2765:2771   */\n      dup4\n        /* \"#utility.yul\":2761:2778   */\n      add\n        /* \"#utility.yul\":2749:2778   */\n      swap2\n      pop\n        /* \"#utility.yul\":2827:2830   */\n      dup4\n        /* \"#utility.yul\":2819:2823   */\n      0x20\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2807:2824   */\n      mul\n        /* \"#utility.yul\":2797:2805   */\n      dup4\n        /* \"#utility.yul\":2793:2825   */\n      add\n        /* \"#utility.yul\":2790:2831   */\n      gt\n        /* \"#utility.yul\":2787:2915   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2834:2913   */\n      tag_149\n      tag_97\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2787:2915   */\n    tag_148:\n        /* \"#utility.yul\":2353:2921   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2927:3861   */\n    tag_15:\n        /* \"#utility.yul\":3049:3055   */\n      0x00\n        /* \"#utility.yul\":3057:3063   */\n      dup1\n        /* \"#utility.yul\":3065:3071   */\n      0x00\n        /* \"#utility.yul\":3073:3079   */\n      dup1\n        /* \"#utility.yul\":3122:3124   */\n      0x40\n        /* \"#utility.yul\":3110:3119   */\n      dup6\n        /* \"#utility.yul\":3101:3108   */\n      dup8\n        /* \"#utility.yul\":3097:3120   */\n      sub\n        /* \"#utility.yul\":3093:3125   */\n      slt\n        /* \"#utility.yul\":3090:3209   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3128:3207   */\n      tag_152\n      tag_88\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3090:3209   */\n    tag_151:\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3265:3274   */\n      dup6\n        /* \"#utility.yul\":3261:3278   */\n      add\n        /* \"#utility.yul\":3248:3279   */\n      calldataload\n        /* \"#utility.yul\":3306:3324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3298:3304   */\n      dup2\n        /* \"#utility.yul\":3295:3325   */\n      gt\n        /* \"#utility.yul\":3292:3409   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3328:3407   */\n      tag_154\n      tag_89\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3292:3409   */\n    tag_153:\n        /* \"#utility.yul\":3441:3521   */\n      tag_155\n        /* \"#utility.yul\":3513:3520   */\n      dup8\n        /* \"#utility.yul\":3504:3510   */\n      dup3\n        /* \"#utility.yul\":3493:3502   */\n      dup9\n        /* \"#utility.yul\":3489:3511   */\n      add\n        /* \"#utility.yul\":3441:3521   */\n      tag_98\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3423:3521   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3219:3531   */\n      pop\n        /* \"#utility.yul\":3598:3600   */\n      0x20\n        /* \"#utility.yul\":3587:3596   */\n      dup6\n        /* \"#utility.yul\":3583:3601   */\n      add\n        /* \"#utility.yul\":3570:3602   */\n      calldataload\n        /* \"#utility.yul\":3629:3647   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3621:3627   */\n      dup2\n        /* \"#utility.yul\":3618:3648   */\n      gt\n        /* \"#utility.yul\":3615:3732   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3651:3730   */\n      tag_157\n      tag_89\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3615:3732   */\n    tag_156:\n        /* \"#utility.yul\":3764:3844   */\n      tag_158\n        /* \"#utility.yul\":3836:3843   */\n      dup8\n        /* \"#utility.yul\":3827:3833   */\n      dup3\n        /* \"#utility.yul\":3816:3825   */\n      dup9\n        /* \"#utility.yul\":3812:3834   */\n      add\n        /* \"#utility.yul\":3764:3844   */\n      tag_99\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3746:3844   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3541:3854   */\n      pop\n        /* \"#utility.yul\":2927:3861   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3867:3985   */\n    tag_100:\n        /* \"#utility.yul\":3954:3978   */\n      tag_160\n        /* \"#utility.yul\":3972:3977   */\n      dup2\n        /* \"#utility.yul\":3954:3978   */\n      tag_91\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3949:3952   */\n      dup3\n        /* \"#utility.yul\":3942:3979   */\n      mstore\n        /* \"#utility.yul\":3867:3985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3991:4213   */\n    tag_22:\n        /* \"#utility.yul\":4084:4088   */\n      0x00\n        /* \"#utility.yul\":4122:4124   */\n      0x20\n        /* \"#utility.yul\":4111:4120   */\n      dup3\n        /* \"#utility.yul\":4107:4125   */\n      add\n        /* \"#utility.yul\":4099:4125   */\n      swap1\n      pop\n        /* \"#utility.yul\":4135:4206   */\n      tag_162\n        /* \"#utility.yul\":4203:4204   */\n      0x00\n        /* \"#utility.yul\":4192:4201   */\n      dup4\n        /* \"#utility.yul\":4188:4205   */\n      add\n        /* \"#utility.yul\":4179:4185   */\n      dup5\n        /* \"#utility.yul\":4135:4206   */\n      tag_100\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3991:4213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4341   */\n    tag_101:\n        /* \"#utility.yul\":4292:4316   */\n      tag_164\n        /* \"#utility.yul\":4310:4315   */\n      dup2\n        /* \"#utility.yul\":4292:4316   */\n      tag_91\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4282:4317   */\n      eq\n        /* \"#utility.yul\":4272:4335   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4328:4329   */\n      dup1\n        /* \"#utility.yul\":4321:4333   */\n      revert\n        /* \"#utility.yul\":4272:4335   */\n    tag_165:\n        /* \"#utility.yul\":4219:4341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4347:4486   */\n    tag_102:\n        /* \"#utility.yul\":4393:4398   */\n      0x00\n        /* \"#utility.yul\":4431:4437   */\n      dup2\n        /* \"#utility.yul\":4418:4438   */\n      calldataload\n        /* \"#utility.yul\":4409:4438   */\n      swap1\n      pop\n        /* \"#utility.yul\":4447:4480   */\n      tag_167\n        /* \"#utility.yul\":4474:4479   */\n      dup2\n        /* \"#utility.yul\":4447:4480   */\n      tag_101\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4347:4486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4492:4821   */\n    tag_25:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4600:4602   */\n      0x20\n        /* \"#utility.yul\":4588:4597   */\n      dup3\n        /* \"#utility.yul\":4579:4586   */\n      dup5\n        /* \"#utility.yul\":4575:4598   */\n      sub\n        /* \"#utility.yul\":4571:4603   */\n      slt\n        /* \"#utility.yul\":4568:4687   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":4606:4685   */\n      tag_170\n      tag_88\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4568:4687   */\n    tag_169:\n        /* \"#utility.yul\":4726:4727   */\n      0x00\n        /* \"#utility.yul\":4751:4804   */\n      tag_171\n        /* \"#utility.yul\":4796:4803   */\n      dup5\n        /* \"#utility.yul\":4787:4793   */\n      dup3\n        /* \"#utility.yul\":4776:4785   */\n      dup6\n        /* \"#utility.yul\":4772:4794   */\n      add\n        /* \"#utility.yul\":4751:4804   */\n      tag_102\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4741:4804   */\n      swap2\n      pop\n        /* \"#utility.yul\":4697:4814   */\n      pop\n        /* \"#utility.yul\":4492:4821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4827:4887   */\n    tag_103:\n        /* \"#utility.yul\":4855:4858   */\n      0x00\n        /* \"#utility.yul\":4876:4881   */\n      dup2\n        /* \"#utility.yul\":4869:4881   */\n      swap1\n      pop\n        /* \"#utility.yul\":4827:4887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4893:5035   */\n    tag_104:\n        /* \"#utility.yul\":4943:4952   */\n      0x00\n        /* \"#utility.yul\":4976:5029   */\n      tag_174\n        /* \"#utility.yul\":4994:5028   */\n      tag_175\n        /* \"#utility.yul\":5003:5027   */\n      tag_176\n        /* \"#utility.yul\":5021:5026   */\n      dup5\n        /* \"#utility.yul\":5003:5027   */\n      tag_90\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4994:5028   */\n      tag_103\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4976:5029   */\n      tag_90\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4963:5029   */\n      swap1\n      pop\n        /* \"#utility.yul\":4893:5035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5041:5167   */\n    tag_105:\n        /* \"#utility.yul\":5091:5100   */\n      0x00\n        /* \"#utility.yul\":5124:5161   */\n      tag_178\n        /* \"#utility.yul\":5155:5160   */\n      dup3\n        /* \"#utility.yul\":5124:5161   */\n      tag_104\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5111:5161   */\n      swap1\n      pop\n        /* \"#utility.yul\":5041:5167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5173:5313   */\n    tag_106:\n        /* \"#utility.yul\":5237:5246   */\n      0x00\n        /* \"#utility.yul\":5270:5307   */\n      tag_180\n        /* \"#utility.yul\":5301:5306   */\n      dup3\n        /* \"#utility.yul\":5270:5307   */\n      tag_105\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5257:5307   */\n      swap1\n      pop\n        /* \"#utility.yul\":5173:5313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5319:5478   */\n    tag_107:\n        /* \"#utility.yul\":5420:5471   */\n      tag_182\n        /* \"#utility.yul\":5465:5470   */\n      dup2\n        /* \"#utility.yul\":5420:5471   */\n      tag_106\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5415:5418   */\n      dup3\n        /* \"#utility.yul\":5408:5472   */\n      mstore\n        /* \"#utility.yul\":5319:5478   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5734   */\n    tag_30:\n        /* \"#utility.yul\":5591:5595   */\n      0x00\n        /* \"#utility.yul\":5629:5631   */\n      0x20\n        /* \"#utility.yul\":5618:5627   */\n      dup3\n        /* \"#utility.yul\":5614:5632   */\n      add\n        /* \"#utility.yul\":5606:5632   */\n      swap1\n      pop\n        /* \"#utility.yul\":5642:5727   */\n      tag_184\n        /* \"#utility.yul\":5724:5725   */\n      0x00\n        /* \"#utility.yul\":5713:5722   */\n      dup4\n        /* \"#utility.yul\":5709:5726   */\n      add\n        /* \"#utility.yul\":5700:5706   */\n      dup5\n        /* \"#utility.yul\":5642:5727   */\n      tag_107\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5484:5734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5740:5909   */\n    tag_108:\n        /* \"#utility.yul\":5824:5835   */\n      0x00\n        /* \"#utility.yul\":5858:5864   */\n      dup3\n        /* \"#utility.yul\":5853:5856   */\n      dup3\n        /* \"#utility.yul\":5846:5865   */\n      mstore\n        /* \"#utility.yul\":5898:5902   */\n      0x20\n        /* \"#utility.yul\":5893:5896   */\n      dup3\n        /* \"#utility.yul\":5889:5903   */\n      add\n        /* \"#utility.yul\":5874:5903   */\n      swap1\n      pop\n        /* \"#utility.yul\":5740:5909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5915:6094   */\n    tag_109:\n        /* \"#utility.yul\":6055:6086   */\n      0x546f6b656e20616464726573732063616e6e6f74206265207a65726f2e000000\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6043:6049   */\n      dup3\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6032:6087   */\n      mstore\n        /* \"#utility.yul\":5915:6094   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6466   */\n    tag_110:\n        /* \"#utility.yul\":6242:6245   */\n      0x00\n        /* \"#utility.yul\":6263:6330   */\n      tag_188\n        /* \"#utility.yul\":6327:6329   */\n      0x1d\n        /* \"#utility.yul\":6322:6325   */\n      dup4\n        /* \"#utility.yul\":6263:6330   */\n      tag_108\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6256:6330   */\n      swap2\n      pop\n        /* \"#utility.yul\":6339:6432   */\n      tag_189\n        /* \"#utility.yul\":6428:6431   */\n      dup3\n        /* \"#utility.yul\":6339:6432   */\n      tag_109\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6457:6459   */\n      0x20\n        /* \"#utility.yul\":6452:6455   */\n      dup3\n        /* \"#utility.yul\":6448:6460   */\n      add\n        /* \"#utility.yul\":6441:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6100:6466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6472:6891   */\n    tag_37:\n        /* \"#utility.yul\":6638:6642   */\n      0x00\n        /* \"#utility.yul\":6676:6678   */\n      0x20\n        /* \"#utility.yul\":6665:6674   */\n      dup3\n        /* \"#utility.yul\":6661:6679   */\n      add\n        /* \"#utility.yul\":6653:6679   */\n      swap1\n      pop\n        /* \"#utility.yul\":6725:6734   */\n      dup2\n        /* \"#utility.yul\":6719:6723   */\n      dup2\n        /* \"#utility.yul\":6715:6735   */\n      sub\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6700:6709   */\n      dup4\n        /* \"#utility.yul\":6696:6713   */\n      add\n        /* \"#utility.yul\":6689:6736   */\n      mstore\n        /* \"#utility.yul\":6753:6884   */\n      tag_191\n        /* \"#utility.yul\":6879:6883   */\n      dup2\n        /* \"#utility.yul\":6753:6884   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6745:6884   */\n      swap1\n      pop\n        /* \"#utility.yul\":6472:6891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6897:7123   */\n    tag_111:\n        /* \"#utility.yul\":7037:7071   */\n      0x526563697069656e747320616e6420616d6f756e7473206c656e677468206d69\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7025:7031   */\n      dup3\n        /* \"#utility.yul\":7021:7035   */\n      add\n        /* \"#utility.yul\":7014:7072   */\n      mstore\n        /* \"#utility.yul\":7106:7115   */\n      0x736d617463682e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7101:7103   */\n      0x20\n        /* \"#utility.yul\":7093:7099   */\n      dup3\n        /* \"#utility.yul\":7089:7104   */\n      add\n        /* \"#utility.yul\":7082:7116   */\n      mstore\n        /* \"#utility.yul\":6897:7123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7129:7495   */\n    tag_112:\n        /* \"#utility.yul\":7271:7274   */\n      0x00\n        /* \"#utility.yul\":7292:7359   */\n      tag_194\n        /* \"#utility.yul\":7356:7358   */\n      0x27\n        /* \"#utility.yul\":7351:7354   */\n      dup4\n        /* \"#utility.yul\":7292:7359   */\n      tag_108\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7285:7359   */\n      swap2\n      pop\n        /* \"#utility.yul\":7368:7461   */\n      tag_195\n        /* \"#utility.yul\":7457:7460   */\n      dup3\n        /* \"#utility.yul\":7368:7461   */\n      tag_111\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7481:7484   */\n      dup3\n        /* \"#utility.yul\":7477:7489   */\n      add\n        /* \"#utility.yul\":7470:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7129:7495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7501:7920   */\n    tag_43:\n        /* \"#utility.yul\":7667:7671   */\n      0x00\n        /* \"#utility.yul\":7705:7707   */\n      0x20\n        /* \"#utility.yul\":7694:7703   */\n      dup3\n        /* \"#utility.yul\":7690:7708   */\n      add\n        /* \"#utility.yul\":7682:7708   */\n      swap1\n      pop\n        /* \"#utility.yul\":7754:7763   */\n      dup2\n        /* \"#utility.yul\":7748:7752   */\n      dup2\n        /* \"#utility.yul\":7744:7764   */\n      sub\n        /* \"#utility.yul\":7740:7741   */\n      0x00\n        /* \"#utility.yul\":7729:7738   */\n      dup4\n        /* \"#utility.yul\":7725:7742   */\n      add\n        /* \"#utility.yul\":7718:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7913   */\n      tag_197\n        /* \"#utility.yul\":7908:7912   */\n      dup2\n        /* \"#utility.yul\":7782:7913   */\n      tag_112\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7774:7913   */\n      swap1\n      pop\n        /* \"#utility.yul\":7501:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8106   */\n    tag_50:\n        /* \"#utility.yul\":7974:8051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7971:7972   */\n      0x00\n        /* \"#utility.yul\":7964:8052   */\n      mstore\n        /* \"#utility.yul\":8071:8075   */\n      0x32\n        /* \"#utility.yul\":8068:8069   */\n      0x04\n        /* \"#utility.yul\":8061:8076   */\n      mstore\n        /* \"#utility.yul\":8095:8099   */\n      0x24\n        /* \"#utility.yul\":8092:8093   */\n      0x00\n        /* \"#utility.yul\":8085:8100   */\n      revert\n        /* \"#utility.yul\":8112:8189   */\n    tag_113:\n        /* \"#utility.yul\":8149:8156   */\n      0x00\n        /* \"#utility.yul\":8178:8183   */\n      dup2\n        /* \"#utility.yul\":8167:8183   */\n      swap1\n      pop\n        /* \"#utility.yul\":8112:8189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8195:8313   */\n    tag_114:\n        /* \"#utility.yul\":8282:8306   */\n      tag_201\n        /* \"#utility.yul\":8300:8305   */\n      dup2\n        /* \"#utility.yul\":8282:8306   */\n      tag_113\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8270:8307   */\n      mstore\n        /* \"#utility.yul\":8195:8313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8319:8651   */\n    tag_77:\n        /* \"#utility.yul\":8440:8444   */\n      0x00\n        /* \"#utility.yul\":8478:8480   */\n      0x40\n        /* \"#utility.yul\":8467:8476   */\n      dup3\n        /* \"#utility.yul\":8463:8481   */\n      add\n        /* \"#utility.yul\":8455:8481   */\n      swap1\n      pop\n        /* \"#utility.yul\":8491:8562   */\n      tag_203\n        /* \"#utility.yul\":8559:8560   */\n      0x00\n        /* \"#utility.yul\":8548:8557   */\n      dup4\n        /* \"#utility.yul\":8544:8561   */\n      add\n        /* \"#utility.yul\":8535:8541   */\n      dup6\n        /* \"#utility.yul\":8491:8562   */\n      tag_100\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8572:8644   */\n      tag_204\n        /* \"#utility.yul\":8640:8642   */\n      0x20\n        /* \"#utility.yul\":8629:8638   */\n      dup4\n        /* \"#utility.yul\":8625:8643   */\n      add\n        /* \"#utility.yul\":8616:8622   */\n      dup5\n        /* \"#utility.yul\":8572:8644   */\n      tag_114\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8319:8651   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e8e30c592e62dc4fb24f225785c2a9f2c1f0624034666595ffd19cbf92208cc464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_265": {
									"entryPoint": 358,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$434_fromMemory": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$434_fromMemory": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$434": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$434": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2908:11",
										"nodeType": "YulBlock",
										"src": "0:2908:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "627:51:11",
													"nodeType": "YulBlock",
													"src": "627:51:11",
													"statements": [
														{
															"nativeSrc": "637:35:11",
															"nodeType": "YulAssignment",
															"src": "637:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:11"
																},
																"nativeSrc": "648:24:11",
																"nodeType": "YulFunctionCall",
																"src": "648:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$434",
												"nativeSrc": "568:110:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:11",
														"nodeType": "YulTypedName",
														"src": "609:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:11",
														"nodeType": "YulTypedName",
														"src": "619:7:11",
														"type": ""
													}
												],
												"src": "568:110:11"
											},
											{
												"body": {
													"nativeSrc": "741:93:11",
													"nodeType": "YulBlock",
													"src": "741:93:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:11",
																"nodeType": "YulBlock",
																"src": "812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:11",
																					"nodeType": "YulLiteral",
																					"src": "821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:11",
																					"nodeType": "YulLiteral",
																					"src": "824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:11"
																			},
																			"nativeSrc": "814:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:11"
																		},
																		"nativeSrc": "814:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$434",
																					"nativeSrc": "771:31:11",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:11"
																				},
																				"nativeSrc": "771:38:11",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:11"
																		},
																		"nativeSrc": "761:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:11"
																},
																"nativeSrc": "754:57:11",
																"nodeType": "YulFunctionCall",
																"src": "754:57:11"
															},
															"nativeSrc": "751:77:11",
															"nodeType": "YulIf",
															"src": "751:77:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$434",
												"nativeSrc": "684:150:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:11",
														"nodeType": "YulTypedName",
														"src": "734:5:11",
														"type": ""
													}
												],
												"src": "684:150:11"
											},
											{
												"body": {
													"nativeSrc": "917:94:11",
													"nodeType": "YulBlock",
													"src": "917:94:11",
													"statements": [
														{
															"nativeSrc": "927:22:11",
															"nodeType": "YulAssignment",
															"src": "927:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:11"
																},
																"nativeSrc": "936:13:11",
																"nodeType": "YulFunctionCall",
																"src": "936:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$434",
																	"nativeSrc": "958:40:11",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:11"
																},
																"nativeSrc": "958:47:11",
																"nodeType": "YulFunctionCall",
																"src": "958:47:11"
															},
															"nativeSrc": "958:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$434_fromMemory",
												"nativeSrc": "840:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:11",
														"nodeType": "YulTypedName",
														"src": "895:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:11",
														"nodeType": "YulTypedName",
														"src": "903:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:11",
														"nodeType": "YulTypedName",
														"src": "911:5:11",
														"type": ""
													}
												],
												"src": "840:171:11"
											},
											{
												"body": {
													"nativeSrc": "1108:288:11",
													"nodeType": "YulBlock",
													"src": "1108:288:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:11",
																"nodeType": "YulBlock",
																"src": "1154:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:11"
																			},
																			"nativeSrc": "1156:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:11"
																		},
																		"nativeSrc": "1156:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:11"
																		},
																		"nativeSrc": "1125:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:11"
																},
																"nativeSrc": "1121:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:11"
															},
															"nativeSrc": "1118:119:11",
															"nodeType": "YulIf",
															"src": "1118:119:11"
														},
														{
															"nativeSrc": "1247:142:11",
															"nodeType": "YulBlock",
															"src": "1247:142:11",
															"statements": [
																{
																	"nativeSrc": "1262:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:11",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:11"
																				},
																				"nativeSrc": "1347:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$434_fromMemory",
																			"nativeSrc": "1301:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:11"
																		},
																		"nativeSrc": "1301:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$434_fromMemory",
												"nativeSrc": "1017:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:11",
														"nodeType": "YulTypedName",
														"src": "1078:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:11",
														"nodeType": "YulTypedName",
														"src": "1089:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:11",
														"nodeType": "YulTypedName",
														"src": "1101:6:11",
														"type": ""
													}
												],
												"src": "1017:379:11"
											},
											{
												"body": {
													"nativeSrc": "1467:53:11",
													"nodeType": "YulBlock",
													"src": "1467:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1484:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1489:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:11"
																		},
																		"nativeSrc": "1489:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:11"
																},
																"nativeSrc": "1477:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1477:37:11"
															},
															"nativeSrc": "1477:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1402:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1455:5:11",
														"nodeType": "YulTypedName",
														"src": "1455:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1462:3:11",
														"nodeType": "YulTypedName",
														"src": "1462:3:11",
														"type": ""
													}
												],
												"src": "1402:118:11"
											},
											{
												"body": {
													"nativeSrc": "1624:124:11",
													"nodeType": "YulBlock",
													"src": "1624:124:11",
													"statements": [
														{
															"nativeSrc": "1634:26:11",
															"nodeType": "YulAssignment",
															"src": "1634:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:11"
																},
																"nativeSrc": "1642:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1714:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1738:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:11"
																		},
																		"nativeSrc": "1723:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1670:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1670:43:11"
																},
																"nativeSrc": "1670:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1670:71:11"
															},
															"nativeSrc": "1670:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1670:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1526:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:11",
														"nodeType": "YulTypedName",
														"src": "1596:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:11",
														"nodeType": "YulTypedName",
														"src": "1608:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:11",
														"nodeType": "YulTypedName",
														"src": "1619:4:11",
														"type": ""
													}
												],
												"src": "1526:222:11"
											},
											{
												"body": {
													"nativeSrc": "1850:73:11",
													"nodeType": "YulBlock",
													"src": "1850:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1867:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1872:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:11"
																},
																"nativeSrc": "1860:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1860:19:11"
															},
															"nativeSrc": "1860:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1860:19:11"
														},
														{
															"nativeSrc": "1888:29:11",
															"nodeType": "YulAssignment",
															"src": "1888:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1907:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1907:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:3:11"
																},
																"nativeSrc": "1903:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1888:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1888:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1754:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1822:3:11",
														"nodeType": "YulTypedName",
														"src": "1822:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1827:6:11",
														"nodeType": "YulTypedName",
														"src": "1827:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1838:11:11",
														"nodeType": "YulTypedName",
														"src": "1838:11:11",
														"type": ""
													}
												],
												"src": "1754:169:11"
											},
											{
												"body": {
													"nativeSrc": "2035:73:11",
													"nodeType": "YulBlock",
													"src": "2035:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2057:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2057:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2065:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2065:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2053:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2053:3:11"
																		},
																		"nativeSrc": "2053:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:14:11"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "2069:31:11",
																		"nodeType": "YulLiteral",
																		"src": "2069:31:11",
																		"type": "",
																		"value": "Token address cannot be zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2046:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:11"
																},
																"nativeSrc": "2046:55:11",
																"nodeType": "YulFunctionCall",
																"src": "2046:55:11"
															},
															"nativeSrc": "2046:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "2046:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
												"nativeSrc": "1929:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2027:6:11",
														"nodeType": "YulTypedName",
														"src": "2027:6:11",
														"type": ""
													}
												],
												"src": "1929:179:11"
											},
											{
												"body": {
													"nativeSrc": "2260:220:11",
													"nodeType": "YulBlock",
													"src": "2260:220:11",
													"statements": [
														{
															"nativeSrc": "2270:74:11",
															"nodeType": "YulAssignment",
															"src": "2270:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2336:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2277:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2277:58:11"
																},
																"nativeSrc": "2277:67:11",
																"nodeType": "YulFunctionCall",
																"src": "2277:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2270:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2270:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2442:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2442:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																	"nativeSrc": "2353:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "2353:88:11"
																},
																"nativeSrc": "2353:93:11",
																"nodeType": "YulFunctionCall",
																"src": "2353:93:11"
															},
															"nativeSrc": "2353:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "2353:93:11"
														},
														{
															"nativeSrc": "2455:19:11",
															"nodeType": "YulAssignment",
															"src": "2455:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2466:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2466:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2471:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2471:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2462:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2462:3:11"
																},
																"nativeSrc": "2462:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2462:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2114:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2248:3:11",
														"nodeType": "YulTypedName",
														"src": "2248:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2256:3:11",
														"nodeType": "YulTypedName",
														"src": "2256:3:11",
														"type": ""
													}
												],
												"src": "2114:366:11"
											},
											{
												"body": {
													"nativeSrc": "2657:248:11",
													"nodeType": "YulBlock",
													"src": "2657:248:11",
													"statements": [
														{
															"nativeSrc": "2667:26:11",
															"nodeType": "YulAssignment",
															"src": "2667:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2690:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2690:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2675:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2675:3:11"
																},
																"nativeSrc": "2675:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2675:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2667:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2667:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2725:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2725:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2710:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2710:3:11"
																		},
																		"nativeSrc": "2710:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2710:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2733:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2733:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2739:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2739:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2729:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:11"
																		},
																		"nativeSrc": "2729:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2703:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2703:6:11"
																},
																"nativeSrc": "2703:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2703:47:11"
															},
															"nativeSrc": "2703:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2703:47:11"
														},
														{
															"nativeSrc": "2759:139:11",
															"nodeType": "YulAssignment",
															"src": "2759:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2893:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2893:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2767:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "2767:124:11"
																},
																"nativeSrc": "2767:131:11",
																"nodeType": "YulFunctionCall",
																"src": "2767:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2759:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2486:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:11",
														"nodeType": "YulTypedName",
														"src": "2637:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2652:4:11",
														"nodeType": "YulTypedName",
														"src": "2652:4:11",
														"type": ""
													}
												],
												"src": "2486:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$434(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$434(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$434(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$434_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$434(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$434_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$434_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610dd9380380610dd983398181016040528101906100319190610296565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102d0565b60405180910390fd5b6100b18161016660201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011790610343565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610361565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102548261022b565b9050919050565b5f6102658261024a565b9050919050565b6102758161025b565b811461027f575f80fd5b50565b5f815190506102908161026c565b92915050565b5f602082840312156102ab576102aa610227565b5b5f6102b884828501610282565b91505092915050565b6102ca8161024a565b82525050565b5f6020820190506102e35f8301846102c1565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f2e0000005f82015250565b5f61032d601d836102e9565b9150610338826102f9565b602082019050919050565b5f6020820190508181035f83015261035a81610321565b9050919050565b610a6b8061036e5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063144fa6d7146100645780636724348214610080578063715018a61461009c5780638da5cb5b146100a6578063f2fde38b146100c4578063fc0c546a146100e0575b5f80fd5b61007e60048036038101906100799190610673565b6100fe565b005b61009a60048036038101906100959190610754565b6101b7565b005b6100a46102b4565b005b6100ae6102c7565b6040516100bb91906107e1565b60405180910390f35b6100de60048036038101906100d99190610824565b6102ee565b005b6100e8610372565b6040516100f591906108aa565b60405180910390f35b610106610397565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b9061091d565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101bf610397565b818190508484905014610207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fe906109ab565b60405180910390fd5b5f5b848490508110156102ad576102a085858381811061022a576102296109c9565b5b905060200201602081019061023f9190610824565b848484818110610252576102516109c9565b5b9050602002013560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661041e9092919063ffffffff16565b8080600101915050610209565b5050505050565b6102bc610397565b6102c55f61049d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f6610397565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610366575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161035d91906107e1565b60405180910390fd5b61036f8161049d565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61039f61055e565b73ffffffffffffffffffffffffffffffffffffffff166103bd6102c7565b73ffffffffffffffffffffffffffffffffffffffff161461041c576103e061055e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161041391906107e1565b60405180910390fd5b565b610498838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610451929190610a0e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610565565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610584576040513d5f823e3d81fd5b3d92505f519150505f821461059d5760018114156105b8565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156105fa57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016105f191906107e1565b60405180910390fd5b50505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61063182610608565b9050919050565b5f61064282610627565b9050919050565b61065281610638565b811461065c575f80fd5b50565b5f8135905061066d81610649565b92915050565b5f6020828403121561068857610687610600565b5b5f6106958482850161065f565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126106bf576106be61069e565b5b8235905067ffffffffffffffff8111156106dc576106db6106a2565b5b6020830191508360208202830111156106f8576106f76106a6565b5b9250929050565b5f8083601f8401126107145761071361069e565b5b8235905067ffffffffffffffff811115610731576107306106a2565b5b60208301915083602082028301111561074d5761074c6106a6565b5b9250929050565b5f805f806040858703121561076c5761076b610600565b5b5f85013567ffffffffffffffff81111561078957610788610604565b5b610795878288016106aa565b9450945050602085013567ffffffffffffffff8111156107b8576107b7610604565b5b6107c4878288016106ff565b925092505092959194509250565b6107db81610627565b82525050565b5f6020820190506107f45f8301846107d2565b92915050565b61080381610627565b811461080d575f80fd5b50565b5f8135905061081e816107fa565b92915050565b5f6020828403121561083957610838610600565b5b5f61084684828501610810565b91505092915050565b5f819050919050565b5f61087261086d61086884610608565b61084f565b610608565b9050919050565b5f61088382610858565b9050919050565b5f61089482610879565b9050919050565b6108a48161088a565b82525050565b5f6020820190506108bd5f83018461089b565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f2e0000005f82015250565b5f610907601d836108c3565b9150610912826108d3565b602082019050919050565b5f6020820190508181035f830152610934816108fb565b9050919050565b7f526563697069656e747320616e6420616d6f756e7473206c656e677468206d695f8201527f736d617463682e00000000000000000000000000000000000000000000000000602082015250565b5f6109956027836108c3565b91506109a08261093b565b604082019050919050565b5f6020820190508181035f8301526109c281610989565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b610a08816109f6565b82525050565b5f604082019050610a215f8301856107d2565b610a2e60208301846109ff565b939250505056fea2646970667358221220e8e30c592e62dc4fb24f225785c2a9f2c1f0624034666595ffd19cbf92208cc464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDD9 CODESIZE SUB DUP1 PUSH2 0xDD9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x296 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x361 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254 DUP3 PUSH2 0x22B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x265 DUP3 PUSH2 0x24A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x25B JUMP JUMPDEST DUP2 EQ PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x290 DUP2 PUSH2 0x26C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x227 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B8 DUP5 DUP3 DUP6 ADD PUSH2 0x282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x24A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F2E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32D PUSH1 0x1D DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x338 DUP3 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35A DUP2 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6B DUP1 PUSH2 0x36E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x67243482 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x397 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x397 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH2 0x2A0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x9C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x252 JUMPI PUSH2 0x251 PUSH2 0x9C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x209 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x397 JUMP JUMPDEST PUSH2 0x2C5 PUSH0 PUSH2 0x49D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x397 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x366 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x49D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x55E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BD PUSH2 0x2C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x41C JUMPI PUSH2 0x3E0 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x498 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x451 SWAP3 SWAP2 SWAP1 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x565 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x59D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x5B8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x5FA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x631 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x642 DUP3 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x652 DUP2 PUSH2 0x638 JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66D DUP2 PUSH2 0x649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x695 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x69E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DB PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x6F7 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x69E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH2 0x76B PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0x604 JUMP JUMPDEST JUMPDEST PUSH2 0x795 DUP8 DUP3 DUP9 ADD PUSH2 0x6AA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x604 JUMP JUMPDEST JUMPDEST PUSH2 0x7C4 DUP8 DUP3 DUP9 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x81E DUP2 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x872 PUSH2 0x86D PUSH2 0x868 DUP5 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x883 DUP3 PUSH2 0x858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x894 DUP3 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A4 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BD PUSH0 DUP4 ADD DUP5 PUSH2 0x89B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F2E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x907 PUSH1 0x1D DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x912 DUP3 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x934 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E747320616E6420616D6F756E7473206C656E677468206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x736D617463682E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x995 PUSH1 0x27 DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A0 DUP3 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C2 DUP2 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA21 PUSH0 DUP4 ADD DUP6 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE3 0xC MSIZE 0x2E PUSH3 0xDC4FB2 0x4F 0x22 JUMPI DUP6 0xC2 0xA9 CALLCODE 0xC1 CREATE PUSH3 0x403466 PUSH6 0x95FFD19CBF92 KECCAK256 DUP13 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "512:1462:0:-:0;;;810:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;845:10;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;902:1:0::1;875:29;;883:6;875:29;;::::0;867:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;956:6;948:5;;:14;;;;;;;;;;;;;;;;;;810:159:::0;512:1462;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:222::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:71;1738:1;1727:9;1723:17;1714:6;1670:71;:::i;:::-;1526:222;;;;:::o;1754:169::-;1838:11;1872:6;1867:3;1860:19;1912:4;1907:3;1903:14;1888:29;;1754:169;;;;:::o;1929:179::-;2069:31;2065:1;2057:6;2053:14;2046:55;1929:179;:::o;2114:366::-;2256:3;2277:67;2341:2;2336:3;2277:67;:::i;:::-;2270:74;;2353:93;2442:3;2353:93;:::i;:::-;2471:2;2466:3;2462:12;2455:19;;2114:366;;;:::o;2486:419::-;2652:4;2690:2;2679:9;2675:18;2667:26;;2739:9;2733:4;2729:20;2725:1;2714:9;2710:17;2703:47;2767:131;2893:4;2767:131;:::i;:::-;2759:139;;2486:419;;;:::o;512:1462:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_803": {
									"entryPoint": 1381,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_203": {
									"entryPoint": 919,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1116": {
									"entryPoint": 1374,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_265": {
									"entryPoint": 1181,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdrop_90": {
									"entryPoint": 439,
									"id": 90,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_186": {
									"entryPoint": 711,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_217": {
									"entryPoint": 692,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_481": {
									"entryPoint": 1054,
									"id": 481,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setToken_117": {
									"entryPoint": 254,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_15": {
									"entryPoint": 882,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_245": {
									"entryPoint": 750,
									"id": 245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IERC20_$434": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC20_$434": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$434_to_t_address_fromStack": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$434__to_t_address__fromStack_reversed": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$434": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$434_to_t_address": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$434": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8654:11",
										"nodeType": "YulBlock",
										"src": "0:8654:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "627:51:11",
													"nodeType": "YulBlock",
													"src": "627:51:11",
													"statements": [
														{
															"nativeSrc": "637:35:11",
															"nodeType": "YulAssignment",
															"src": "637:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:11"
																},
																"nativeSrc": "648:24:11",
																"nodeType": "YulFunctionCall",
																"src": "648:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$434",
												"nativeSrc": "568:110:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:11",
														"nodeType": "YulTypedName",
														"src": "609:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:11",
														"nodeType": "YulTypedName",
														"src": "619:7:11",
														"type": ""
													}
												],
												"src": "568:110:11"
											},
											{
												"body": {
													"nativeSrc": "741:93:11",
													"nodeType": "YulBlock",
													"src": "741:93:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:11",
																"nodeType": "YulBlock",
																"src": "812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:11",
																					"nodeType": "YulLiteral",
																					"src": "821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:11",
																					"nodeType": "YulLiteral",
																					"src": "824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:11"
																			},
																			"nativeSrc": "814:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:11"
																		},
																		"nativeSrc": "814:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$434",
																					"nativeSrc": "771:31:11",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:11"
																				},
																				"nativeSrc": "771:38:11",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:11"
																		},
																		"nativeSrc": "761:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:11"
																},
																"nativeSrc": "754:57:11",
																"nodeType": "YulFunctionCall",
																"src": "754:57:11"
															},
															"nativeSrc": "751:77:11",
															"nodeType": "YulIf",
															"src": "751:77:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$434",
												"nativeSrc": "684:150:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:11",
														"nodeType": "YulTypedName",
														"src": "734:5:11",
														"type": ""
													}
												],
												"src": "684:150:11"
											},
											{
												"body": {
													"nativeSrc": "906:101:11",
													"nodeType": "YulBlock",
													"src": "906:101:11",
													"statements": [
														{
															"nativeSrc": "916:29:11",
															"nodeType": "YulAssignment",
															"src": "916:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "925:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "925:12:11"
																},
																"nativeSrc": "925:20:11",
																"nodeType": "YulFunctionCall",
																"src": "925:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "916:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "916:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "995:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "995:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$434",
																	"nativeSrc": "954:40:11",
																	"nodeType": "YulIdentifier",
																	"src": "954:40:11"
																},
																"nativeSrc": "954:47:11",
																"nodeType": "YulFunctionCall",
																"src": "954:47:11"
															},
															"nativeSrc": "954:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "954:47:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$434",
												"nativeSrc": "840:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "884:6:11",
														"nodeType": "YulTypedName",
														"src": "884:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "892:3:11",
														"nodeType": "YulTypedName",
														"src": "892:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "900:5:11",
														"nodeType": "YulTypedName",
														"src": "900:5:11",
														"type": ""
													}
												],
												"src": "840:167:11"
											},
											{
												"body": {
													"nativeSrc": "1093:277:11",
													"nodeType": "YulBlock",
													"src": "1093:277:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1139:83:11",
																"nodeType": "YulBlock",
																"src": "1139:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1141:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1141:77:11"
																			},
																			"nativeSrc": "1141:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1141:79:11"
																		},
																		"nativeSrc": "1141:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1141:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1114:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1114:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1110:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:11"
																		},
																		"nativeSrc": "1110:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1110:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1135:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1135:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1106:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1106:3:11"
																},
																"nativeSrc": "1106:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1106:32:11"
															},
															"nativeSrc": "1103:119:11",
															"nodeType": "YulIf",
															"src": "1103:119:11"
														},
														{
															"nativeSrc": "1232:131:11",
															"nodeType": "YulBlock",
															"src": "1232:131:11",
															"statements": [
																{
																	"nativeSrc": "1247:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1247:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1261:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1261:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1251:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1251:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1276:77:11",
																	"nodeType": "YulAssignment",
																	"src": "1276:77:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1325:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1325:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1336:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1336:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1321:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:11"
																				},
																				"nativeSrc": "1321:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1321:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1345:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1345:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$434",
																			"nativeSrc": "1286:34:11",
																			"nodeType": "YulIdentifier",
																			"src": "1286:34:11"
																		},
																		"nativeSrc": "1286:67:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:67:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1276:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1276:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$434",
												"nativeSrc": "1013:357:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1063:9:11",
														"nodeType": "YulTypedName",
														"src": "1063:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1074:7:11",
														"nodeType": "YulTypedName",
														"src": "1074:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1086:6:11",
														"nodeType": "YulTypedName",
														"src": "1086:6:11",
														"type": ""
													}
												],
												"src": "1013:357:11"
											},
											{
												"body": {
													"nativeSrc": "1465:28:11",
													"nodeType": "YulBlock",
													"src": "1465:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1482:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1482:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1485:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1485:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1475:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:11"
																},
																"nativeSrc": "1475:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1475:12:11"
															},
															"nativeSrc": "1475:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1475:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1376:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1376:117:11"
											},
											{
												"body": {
													"nativeSrc": "1588:28:11",
													"nodeType": "YulBlock",
													"src": "1588:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1608:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"nativeSrc": "1598:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1598:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1499:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1499:117:11"
											},
											{
												"body": {
													"nativeSrc": "1711:28:11",
													"nodeType": "YulBlock",
													"src": "1711:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1728:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1728:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1731:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1731:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1721:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:11"
																},
																"nativeSrc": "1721:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1721:12:11"
															},
															"nativeSrc": "1721:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1721:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1622:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1622:117:11"
											},
											{
												"body": {
													"nativeSrc": "1852:478:11",
													"nodeType": "YulBlock",
													"src": "1852:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1901:83:11",
																"nodeType": "YulBlock",
																"src": "1901:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1903:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1903:77:11"
																			},
																			"nativeSrc": "1903:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1903:79:11"
																		},
																		"nativeSrc": "1903:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1903:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1880:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1880:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1888:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1888:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1876:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:3:11"
																				},
																				"nativeSrc": "1876:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1895:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1872:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:11"
																		},
																		"nativeSrc": "1872:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1872:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1865:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:11"
																},
																"nativeSrc": "1865:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1865:35:11"
															},
															"nativeSrc": "1862:122:11",
															"nodeType": "YulIf",
															"src": "1862:122:11"
														},
														{
															"nativeSrc": "1993:30:11",
															"nodeType": "YulAssignment",
															"src": "1993:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2016:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2016:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2003:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2003:12:11"
																},
																"nativeSrc": "2003:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2003:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2066:83:11",
																"nodeType": "YulBlock",
																"src": "2066:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2068:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2068:77:11"
																			},
																			"nativeSrc": "2068:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2068:79:11"
																		},
																		"nativeSrc": "2068:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2068:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2038:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2038:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2046:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2046:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2035:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2035:2:11"
																},
																"nativeSrc": "2035:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2035:30:11"
															},
															"nativeSrc": "2032:117:11",
															"nodeType": "YulIf",
															"src": "2032:117:11"
														},
														{
															"nativeSrc": "2158:29:11",
															"nodeType": "YulAssignment",
															"src": "2158:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2174:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2182:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2170:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:11"
																},
																"nativeSrc": "2170:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2170:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2158:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2158:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2241:83:11",
																"nodeType": "YulBlock",
																"src": "2241:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2243:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2243:77:11"
																			},
																			"nativeSrc": "2243:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2243:79:11"
																		},
																		"nativeSrc": "2243:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2206:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2206:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2220:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2220:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2228:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2228:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2216:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2216:3:11"
																				},
																				"nativeSrc": "2216:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2216:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2202:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:11"
																		},
																		"nativeSrc": "2202:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2202:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2236:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2236:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2199:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2199:2:11"
																},
																"nativeSrc": "2199:41:11",
																"nodeType": "YulFunctionCall",
																"src": "2199:41:11"
															},
															"nativeSrc": "2196:128:11",
															"nodeType": "YulIf",
															"src": "2196:128:11"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1762:568:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1819:6:11",
														"nodeType": "YulTypedName",
														"src": "1819:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1827:3:11",
														"nodeType": "YulTypedName",
														"src": "1827:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1835:8:11",
														"nodeType": "YulTypedName",
														"src": "1835:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1845:6:11",
														"nodeType": "YulTypedName",
														"src": "1845:6:11",
														"type": ""
													}
												],
												"src": "1762:568:11"
											},
											{
												"body": {
													"nativeSrc": "2443:478:11",
													"nodeType": "YulBlock",
													"src": "2443:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2492:83:11",
																"nodeType": "YulBlock",
																"src": "2492:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2494:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2494:77:11"
																			},
																			"nativeSrc": "2494:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2494:79:11"
																		},
																		"nativeSrc": "2494:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2471:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2479:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2479:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2467:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2467:3:11"
																				},
																				"nativeSrc": "2467:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2467:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2486:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2486:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2463:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:11"
																		},
																		"nativeSrc": "2463:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2463:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2456:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:11"
																},
																"nativeSrc": "2456:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2456:35:11"
															},
															"nativeSrc": "2453:122:11",
															"nodeType": "YulIf",
															"src": "2453:122:11"
														},
														{
															"nativeSrc": "2584:30:11",
															"nodeType": "YulAssignment",
															"src": "2584:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2607:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2607:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2594:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2594:12:11"
																},
																"nativeSrc": "2594:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2594:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2584:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2584:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2657:83:11",
																"nodeType": "YulBlock",
																"src": "2657:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2659:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2659:77:11"
																			},
																			"nativeSrc": "2659:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2659:79:11"
																		},
																		"nativeSrc": "2659:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2659:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2629:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2637:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2637:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2626:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2626:2:11"
																},
																"nativeSrc": "2626:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2626:30:11"
															},
															"nativeSrc": "2623:117:11",
															"nodeType": "YulIf",
															"src": "2623:117:11"
														},
														{
															"nativeSrc": "2749:29:11",
															"nodeType": "YulAssignment",
															"src": "2749:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2765:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2765:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2773:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2761:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:11"
																},
																"nativeSrc": "2761:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2761:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2749:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2749:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2832:83:11",
																"nodeType": "YulBlock",
																"src": "2832:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2834:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2834:77:11"
																			},
																			"nativeSrc": "2834:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2834:79:11"
																		},
																		"nativeSrc": "2834:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2834:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2797:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2797:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2811:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2811:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2819:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2819:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2807:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2807:3:11"
																				},
																				"nativeSrc": "2807:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2807:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:11"
																		},
																		"nativeSrc": "2793:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2827:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2827:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2790:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2790:2:11"
																},
																"nativeSrc": "2790:41:11",
																"nodeType": "YulFunctionCall",
																"src": "2790:41:11"
															},
															"nativeSrc": "2787:128:11",
															"nodeType": "YulIf",
															"src": "2787:128:11"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2353:568:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2410:6:11",
														"nodeType": "YulTypedName",
														"src": "2410:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2418:3:11",
														"nodeType": "YulTypedName",
														"src": "2418:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2426:8:11",
														"nodeType": "YulTypedName",
														"src": "2426:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2436:6:11",
														"nodeType": "YulTypedName",
														"src": "2436:6:11",
														"type": ""
													}
												],
												"src": "2353:568:11"
											},
											{
												"body": {
													"nativeSrc": "3080:781:11",
													"nodeType": "YulBlock",
													"src": "3080:781:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3126:83:11",
																"nodeType": "YulBlock",
																"src": "3126:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3128:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3128:77:11"
																			},
																			"nativeSrc": "3128:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3128:79:11"
																		},
																		"nativeSrc": "3128:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3101:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3110:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3097:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:11"
																		},
																		"nativeSrc": "3097:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3093:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:11"
																},
																"nativeSrc": "3093:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3093:32:11"
															},
															"nativeSrc": "3090:119:11",
															"nodeType": "YulIf",
															"src": "3090:119:11"
														},
														{
															"nativeSrc": "3219:312:11",
															"nodeType": "YulBlock",
															"src": "3219:312:11",
															"statements": [
																{
																	"nativeSrc": "3234:45:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3234:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3265:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3276:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3276:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:11"
																				},
																				"nativeSrc": "3261:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3261:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3248:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "3248:12:11"
																		},
																		"nativeSrc": "3248:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3238:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3238:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3326:83:11",
																		"nodeType": "YulBlock",
																		"src": "3326:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3328:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3328:77:11"
																					},
																					"nativeSrc": "3328:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3328:79:11"
																				},
																				"nativeSrc": "3328:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3328:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3298:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3298:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3306:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3306:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3295:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3295:2:11"
																		},
																		"nativeSrc": "3295:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:30:11"
																	},
																	"nativeSrc": "3292:117:11",
																	"nodeType": "YulIf",
																	"src": "3292:117:11"
																},
																{
																	"nativeSrc": "3423:98:11",
																	"nodeType": "YulAssignment",
																	"src": "3423:98:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3493:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3493:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3504:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3504:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3489:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3489:3:11"
																				},
																				"nativeSrc": "3489:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3489:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3513:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3513:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "3441:47:11",
																			"nodeType": "YulIdentifier",
																			"src": "3441:47:11"
																		},
																		"nativeSrc": "3441:80:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:80:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3423:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3423:6:11"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "3431:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3431:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3541:313:11",
															"nodeType": "YulBlock",
															"src": "3541:313:11",
															"statements": [
																{
																	"nativeSrc": "3556:46:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3556:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3587:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3587:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3598:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3598:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3583:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3583:3:11"
																				},
																				"nativeSrc": "3583:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3583:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3570:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "3570:12:11"
																		},
																		"nativeSrc": "3570:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3560:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3560:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3649:83:11",
																		"nodeType": "YulBlock",
																		"src": "3649:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3651:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3651:77:11"
																					},
																					"nativeSrc": "3651:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3651:79:11"
																				},
																				"nativeSrc": "3651:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3651:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3621:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3629:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3629:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3618:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3618:2:11"
																		},
																		"nativeSrc": "3618:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3618:30:11"
																	},
																	"nativeSrc": "3615:117:11",
																	"nodeType": "YulIf",
																	"src": "3615:117:11"
																},
																{
																	"nativeSrc": "3746:98:11",
																	"nodeType": "YulAssignment",
																	"src": "3746:98:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3816:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3816:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3827:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3827:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3812:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3812:3:11"
																				},
																				"nativeSrc": "3812:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3812:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3836:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3836:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3764:47:11",
																			"nodeType": "YulIdentifier",
																			"src": "3764:47:11"
																		},
																		"nativeSrc": "3764:80:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3764:80:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3746:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3746:6:11"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "3754:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3754:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2927:934:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3026:9:11",
														"nodeType": "YulTypedName",
														"src": "3026:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3037:7:11",
														"nodeType": "YulTypedName",
														"src": "3037:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3049:6:11",
														"nodeType": "YulTypedName",
														"src": "3049:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3057:6:11",
														"nodeType": "YulTypedName",
														"src": "3057:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3065:6:11",
														"nodeType": "YulTypedName",
														"src": "3065:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3073:6:11",
														"nodeType": "YulTypedName",
														"src": "3073:6:11",
														"type": ""
													}
												],
												"src": "2927:934:11"
											},
											{
												"body": {
													"nativeSrc": "3932:53:11",
													"nodeType": "YulBlock",
													"src": "3932:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3949:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3949:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3972:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3972:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3954:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3954:17:11"
																		},
																		"nativeSrc": "3954:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3954:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3942:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:11"
																},
																"nativeSrc": "3942:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3942:37:11"
															},
															"nativeSrc": "3942:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3942:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3867:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3920:5:11",
														"nodeType": "YulTypedName",
														"src": "3920:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3927:3:11",
														"nodeType": "YulTypedName",
														"src": "3927:3:11",
														"type": ""
													}
												],
												"src": "3867:118:11"
											},
											{
												"body": {
													"nativeSrc": "4089:124:11",
													"nodeType": "YulBlock",
													"src": "4089:124:11",
													"statements": [
														{
															"nativeSrc": "4099:26:11",
															"nodeType": "YulAssignment",
															"src": "4099:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4111:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4111:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4122:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4122:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4107:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4107:3:11"
																},
																"nativeSrc": "4107:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4107:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4099:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4099:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4179:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4192:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4203:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4203:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4188:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:11"
																		},
																		"nativeSrc": "4188:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4135:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4135:43:11"
																},
																"nativeSrc": "4135:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4135:71:11"
															},
															"nativeSrc": "4135:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4135:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3991:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4061:9:11",
														"nodeType": "YulTypedName",
														"src": "4061:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4073:6:11",
														"nodeType": "YulTypedName",
														"src": "4073:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4084:4:11",
														"nodeType": "YulTypedName",
														"src": "4084:4:11",
														"type": ""
													}
												],
												"src": "3991:222:11"
											},
											{
												"body": {
													"nativeSrc": "4262:79:11",
													"nodeType": "YulBlock",
													"src": "4262:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4319:16:11",
																"nodeType": "YulBlock",
																"src": "4319:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4328:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4328:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4331:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4321:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:11"
																			},
																			"nativeSrc": "4321:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4321:12:11"
																		},
																		"nativeSrc": "4321:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4321:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4285:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4310:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4310:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4292:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "4292:17:11"
																				},
																				"nativeSrc": "4292:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4292:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4282:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4282:2:11"
																		},
																		"nativeSrc": "4282:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4275:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:11"
																},
																"nativeSrc": "4275:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4275:43:11"
															},
															"nativeSrc": "4272:63:11",
															"nodeType": "YulIf",
															"src": "4272:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4219:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4255:5:11",
														"nodeType": "YulTypedName",
														"src": "4255:5:11",
														"type": ""
													}
												],
												"src": "4219:122:11"
											},
											{
												"body": {
													"nativeSrc": "4399:87:11",
													"nodeType": "YulBlock",
													"src": "4399:87:11",
													"statements": [
														{
															"nativeSrc": "4409:29:11",
															"nodeType": "YulAssignment",
															"src": "4409:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4431:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4418:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4418:12:11"
																},
																"nativeSrc": "4418:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4418:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4409:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4409:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4474:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4474:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4447:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "4447:26:11"
																},
																"nativeSrc": "4447:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4447:33:11"
															},
															"nativeSrc": "4447:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4447:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4347:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4377:6:11",
														"nodeType": "YulTypedName",
														"src": "4377:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4385:3:11",
														"nodeType": "YulTypedName",
														"src": "4385:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4393:5:11",
														"nodeType": "YulTypedName",
														"src": "4393:5:11",
														"type": ""
													}
												],
												"src": "4347:139:11"
											},
											{
												"body": {
													"nativeSrc": "4558:263:11",
													"nodeType": "YulBlock",
													"src": "4558:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4604:83:11",
																"nodeType": "YulBlock",
																"src": "4604:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4606:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4606:77:11"
																			},
																			"nativeSrc": "4606:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4606:79:11"
																		},
																		"nativeSrc": "4606:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4606:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4579:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4579:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4588:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4588:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4575:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:11"
																		},
																		"nativeSrc": "4575:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4600:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4600:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4571:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:11"
																},
																"nativeSrc": "4571:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4571:32:11"
															},
															"nativeSrc": "4568:119:11",
															"nodeType": "YulIf",
															"src": "4568:119:11"
														},
														{
															"nativeSrc": "4697:117:11",
															"nodeType": "YulBlock",
															"src": "4697:117:11",
															"statements": [
																{
																	"nativeSrc": "4712:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4712:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4726:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4726:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4716:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4716:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4741:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4741:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4776:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4776:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4787:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4787:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4772:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4772:3:11"
																				},
																				"nativeSrc": "4772:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4772:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4796:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4796:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4751:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4751:20:11"
																		},
																		"nativeSrc": "4751:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4741:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4741:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4492:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4528:9:11",
														"nodeType": "YulTypedName",
														"src": "4528:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4539:7:11",
														"nodeType": "YulTypedName",
														"src": "4539:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4551:6:11",
														"nodeType": "YulTypedName",
														"src": "4551:6:11",
														"type": ""
													}
												],
												"src": "4492:329:11"
											},
											{
												"body": {
													"nativeSrc": "4859:28:11",
													"nodeType": "YulBlock",
													"src": "4859:28:11",
													"statements": [
														{
															"nativeSrc": "4869:12:11",
															"nodeType": "YulAssignment",
															"src": "4869:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "4876:5:11",
																"nodeType": "YulIdentifier",
																"src": "4876:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4869:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4869:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4827:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4845:5:11",
														"nodeType": "YulTypedName",
														"src": "4845:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4855:3:11",
														"nodeType": "YulTypedName",
														"src": "4855:3:11",
														"type": ""
													}
												],
												"src": "4827:60:11"
											},
											{
												"body": {
													"nativeSrc": "4953:82:11",
													"nodeType": "YulBlock",
													"src": "4953:82:11",
													"statements": [
														{
															"nativeSrc": "4963:66:11",
															"nodeType": "YulAssignment",
															"src": "4963:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5021:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5021:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5003:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5003:17:11"
																				},
																				"nativeSrc": "5003:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5003:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4994:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "4994:8:11"
																		},
																		"nativeSrc": "4994:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4994:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4976:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4976:17:11"
																},
																"nativeSrc": "4976:53:11",
																"nodeType": "YulFunctionCall",
																"src": "4976:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4963:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4963:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4893:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4933:5:11",
														"nodeType": "YulTypedName",
														"src": "4933:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4943:9:11",
														"nodeType": "YulTypedName",
														"src": "4943:9:11",
														"type": ""
													}
												],
												"src": "4893:142:11"
											},
											{
												"body": {
													"nativeSrc": "5101:66:11",
													"nodeType": "YulBlock",
													"src": "5101:66:11",
													"statements": [
														{
															"nativeSrc": "5111:50:11",
															"nodeType": "YulAssignment",
															"src": "5111:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5155:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5155:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5124:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5124:30:11"
																},
																"nativeSrc": "5124:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5124:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5111:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5111:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5041:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5081:5:11",
														"nodeType": "YulTypedName",
														"src": "5081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5091:9:11",
														"nodeType": "YulTypedName",
														"src": "5091:9:11",
														"type": ""
													}
												],
												"src": "5041:126:11"
											},
											{
												"body": {
													"nativeSrc": "5247:66:11",
													"nodeType": "YulBlock",
													"src": "5247:66:11",
													"statements": [
														{
															"nativeSrc": "5257:50:11",
															"nodeType": "YulAssignment",
															"src": "5257:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5301:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5301:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5270:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5270:30:11"
																},
																"nativeSrc": "5270:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5270:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5257:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5257:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$434_to_t_address",
												"nativeSrc": "5173:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5227:5:11",
														"nodeType": "YulTypedName",
														"src": "5227:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5237:9:11",
														"nodeType": "YulTypedName",
														"src": "5237:9:11",
														"type": ""
													}
												],
												"src": "5173:140:11"
											},
											{
												"body": {
													"nativeSrc": "5398:80:11",
													"nodeType": "YulBlock",
													"src": "5398:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5415:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5415:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5465:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5465:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$434_to_t_address",
																			"nativeSrc": "5420:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "5420:44:11"
																		},
																		"nativeSrc": "5420:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5420:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5408:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:11"
																},
																"nativeSrc": "5408:64:11",
																"nodeType": "YulFunctionCall",
																"src": "5408:64:11"
															},
															"nativeSrc": "5408:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "5408:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$434_to_t_address_fromStack",
												"nativeSrc": "5319:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5386:5:11",
														"nodeType": "YulTypedName",
														"src": "5386:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5393:3:11",
														"nodeType": "YulTypedName",
														"src": "5393:3:11",
														"type": ""
													}
												],
												"src": "5319:159:11"
											},
											{
												"body": {
													"nativeSrc": "5596:138:11",
													"nodeType": "YulBlock",
													"src": "5596:138:11",
													"statements": [
														{
															"nativeSrc": "5606:26:11",
															"nodeType": "YulAssignment",
															"src": "5606:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5618:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5618:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5629:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5629:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5614:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5614:3:11"
																},
																"nativeSrc": "5614:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5614:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5606:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5606:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5700:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5700:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5713:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5713:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5724:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5724:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5709:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:11"
																		},
																		"nativeSrc": "5709:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$434_to_t_address_fromStack",
																	"nativeSrc": "5642:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "5642:57:11"
																},
																"nativeSrc": "5642:85:11",
																"nodeType": "YulFunctionCall",
																"src": "5642:85:11"
															},
															"nativeSrc": "5642:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "5642:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$434__to_t_address__fromStack_reversed",
												"nativeSrc": "5484:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5568:9:11",
														"nodeType": "YulTypedName",
														"src": "5568:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5580:6:11",
														"nodeType": "YulTypedName",
														"src": "5580:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5591:4:11",
														"nodeType": "YulTypedName",
														"src": "5591:4:11",
														"type": ""
													}
												],
												"src": "5484:250:11"
											},
											{
												"body": {
													"nativeSrc": "5836:73:11",
													"nodeType": "YulBlock",
													"src": "5836:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5853:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5853:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5858:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5858:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5846:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5846:6:11"
																},
																"nativeSrc": "5846:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5846:19:11"
															},
															"nativeSrc": "5846:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "5846:19:11"
														},
														{
															"nativeSrc": "5874:29:11",
															"nodeType": "YulAssignment",
															"src": "5874:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5893:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5893:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5898:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5898:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5889:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:11"
																},
																"nativeSrc": "5889:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5889:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5874:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "5874:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5740:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5808:3:11",
														"nodeType": "YulTypedName",
														"src": "5808:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5813:6:11",
														"nodeType": "YulTypedName",
														"src": "5813:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5824:11:11",
														"nodeType": "YulTypedName",
														"src": "5824:11:11",
														"type": ""
													}
												],
												"src": "5740:169:11"
											},
											{
												"body": {
													"nativeSrc": "6021:73:11",
													"nodeType": "YulBlock",
													"src": "6021:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6043:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6043:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6051:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6051:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6039:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:11"
																		},
																		"nativeSrc": "6039:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:14:11"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "6055:31:11",
																		"nodeType": "YulLiteral",
																		"src": "6055:31:11",
																		"type": "",
																		"value": "Token address cannot be zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:11"
																},
																"nativeSrc": "6032:55:11",
																"nodeType": "YulFunctionCall",
																"src": "6032:55:11"
															},
															"nativeSrc": "6032:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "6032:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
												"nativeSrc": "5915:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6013:6:11",
														"nodeType": "YulTypedName",
														"src": "6013:6:11",
														"type": ""
													}
												],
												"src": "5915:179:11"
											},
											{
												"body": {
													"nativeSrc": "6246:220:11",
													"nodeType": "YulBlock",
													"src": "6246:220:11",
													"statements": [
														{
															"nativeSrc": "6256:74:11",
															"nodeType": "YulAssignment",
															"src": "6256:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6322:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6322:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6327:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6327:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6263:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6263:58:11"
																},
																"nativeSrc": "6263:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6263:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6256:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6428:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																	"nativeSrc": "6339:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6339:88:11"
																},
																"nativeSrc": "6339:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6339:93:11"
															},
															"nativeSrc": "6339:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6339:93:11"
														},
														{
															"nativeSrc": "6441:19:11",
															"nodeType": "YulAssignment",
															"src": "6441:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6452:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6452:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6448:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:11"
																},
																"nativeSrc": "6448:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6448:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6441:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6441:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6100:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6234:3:11",
														"nodeType": "YulTypedName",
														"src": "6234:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6242:3:11",
														"nodeType": "YulTypedName",
														"src": "6242:3:11",
														"type": ""
													}
												],
												"src": "6100:366:11"
											},
											{
												"body": {
													"nativeSrc": "6643:248:11",
													"nodeType": "YulBlock",
													"src": "6643:248:11",
													"statements": [
														{
															"nativeSrc": "6653:26:11",
															"nodeType": "YulAssignment",
															"src": "6653:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6665:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6665:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6676:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6676:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6661:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6661:3:11"
																},
																"nativeSrc": "6661:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6661:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6653:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6653:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6700:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6700:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6711:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6711:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6696:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6696:3:11"
																		},
																		"nativeSrc": "6696:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6696:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6719:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6719:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6725:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6725:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:11"
																		},
																		"nativeSrc": "6715:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6715:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6689:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:11"
																},
																"nativeSrc": "6689:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6689:47:11"
															},
															"nativeSrc": "6689:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6689:47:11"
														},
														{
															"nativeSrc": "6745:139:11",
															"nodeType": "YulAssignment",
															"src": "6745:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6879:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6879:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6753:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6753:124:11"
																},
																"nativeSrc": "6753:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6753:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6745:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6745:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6472:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:11",
														"nodeType": "YulTypedName",
														"src": "6623:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6638:4:11",
														"nodeType": "YulTypedName",
														"src": "6638:4:11",
														"type": ""
													}
												],
												"src": "6472:419:11"
											},
											{
												"body": {
													"nativeSrc": "7003:120:11",
													"nodeType": "YulBlock",
													"src": "7003:120:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7025:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7025:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7033:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7033:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:11"
																		},
																		"nativeSrc": "7021:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:14:11"
																	},
																	{
																		"hexValue": "526563697069656e747320616e6420616d6f756e7473206c656e677468206d69",
																		"kind": "string",
																		"nativeSrc": "7037:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7037:34:11",
																		"type": "",
																		"value": "Recipients and amounts length mi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7014:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:11"
																},
																"nativeSrc": "7014:58:11",
																"nodeType": "YulFunctionCall",
																"src": "7014:58:11"
															},
															"nativeSrc": "7014:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "7014:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7093:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7093:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7101:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7101:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7089:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7089:3:11"
																		},
																		"nativeSrc": "7089:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7089:15:11"
																	},
																	{
																		"hexValue": "736d617463682e",
																		"kind": "string",
																		"nativeSrc": "7106:9:11",
																		"nodeType": "YulLiteral",
																		"src": "7106:9:11",
																		"type": "",
																		"value": "smatch."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7082:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:11"
																},
																"nativeSrc": "7082:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7082:34:11"
															},
															"nativeSrc": "7082:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7082:34:11"
														}
													]
												},
												"name": "store_literal_in_memory_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e",
												"nativeSrc": "6897:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6995:6:11",
														"nodeType": "YulTypedName",
														"src": "6995:6:11",
														"type": ""
													}
												],
												"src": "6897:226:11"
											},
											{
												"body": {
													"nativeSrc": "7275:220:11",
													"nodeType": "YulBlock",
													"src": "7275:220:11",
													"statements": [
														{
															"nativeSrc": "7285:74:11",
															"nodeType": "YulAssignment",
															"src": "7285:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7351:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7351:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7356:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:11",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7292:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7292:58:11"
																},
																"nativeSrc": "7292:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7292:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7285:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7457:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e",
																	"nativeSrc": "7368:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7368:88:11"
																},
																"nativeSrc": "7368:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7368:93:11"
															},
															"nativeSrc": "7368:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7368:93:11"
														},
														{
															"nativeSrc": "7470:19:11",
															"nodeType": "YulAssignment",
															"src": "7470:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7481:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7481:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7477:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:11"
																},
																"nativeSrc": "7477:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7477:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7470:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7129:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7263:3:11",
														"nodeType": "YulTypedName",
														"src": "7263:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7271:3:11",
														"nodeType": "YulTypedName",
														"src": "7271:3:11",
														"type": ""
													}
												],
												"src": "7129:366:11"
											},
											{
												"body": {
													"nativeSrc": "7672:248:11",
													"nodeType": "YulBlock",
													"src": "7672:248:11",
													"statements": [
														{
															"nativeSrc": "7682:26:11",
															"nodeType": "YulAssignment",
															"src": "7682:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7694:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7694:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7705:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7705:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7690:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7690:3:11"
																},
																"nativeSrc": "7690:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7690:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7682:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7682:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7729:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7740:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7740:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7725:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7725:3:11"
																		},
																		"nativeSrc": "7725:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7725:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7748:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7748:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7754:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7744:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:11"
																		},
																		"nativeSrc": "7744:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7718:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:11"
																},
																"nativeSrc": "7718:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7718:47:11"
															},
															"nativeSrc": "7718:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7718:47:11"
														},
														{
															"nativeSrc": "7774:139:11",
															"nodeType": "YulAssignment",
															"src": "7774:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7908:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7908:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7782:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7782:124:11"
																},
																"nativeSrc": "7782:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7782:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7774:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7774:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7501:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7652:9:11",
														"nodeType": "YulTypedName",
														"src": "7652:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7667:4:11",
														"nodeType": "YulTypedName",
														"src": "7667:4:11",
														"type": ""
													}
												],
												"src": "7501:419:11"
											},
											{
												"body": {
													"nativeSrc": "7954:152:11",
													"nodeType": "YulBlock",
													"src": "7954:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7971:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7971:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7974:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7974:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7964:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7964:6:11"
																},
																"nativeSrc": "7964:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7964:88:11"
															},
															"nativeSrc": "7964:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7964:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8068:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8068:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8071:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8071:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8061:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8061:6:11"
																},
																"nativeSrc": "8061:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8061:15:11"
															},
															"nativeSrc": "8061:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8061:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8092:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8092:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8095:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8095:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8085:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:11"
																},
																"nativeSrc": "8085:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8085:15:11"
															},
															"nativeSrc": "8085:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8085:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7926:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7926:180:11"
											},
											{
												"body": {
													"nativeSrc": "8157:32:11",
													"nodeType": "YulBlock",
													"src": "8157:32:11",
													"statements": [
														{
															"nativeSrc": "8167:16:11",
															"nodeType": "YulAssignment",
															"src": "8167:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "8178:5:11",
																"nodeType": "YulIdentifier",
																"src": "8178:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8167:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8167:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "8112:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8139:5:11",
														"nodeType": "YulTypedName",
														"src": "8139:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8149:7:11",
														"nodeType": "YulTypedName",
														"src": "8149:7:11",
														"type": ""
													}
												],
												"src": "8112:77:11"
											},
											{
												"body": {
													"nativeSrc": "8260:53:11",
													"nodeType": "YulBlock",
													"src": "8260:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8277:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8300:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8300:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8282:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8282:17:11"
																		},
																		"nativeSrc": "8282:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8282:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8270:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:11"
																},
																"nativeSrc": "8270:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8270:37:11"
															},
															"nativeSrc": "8270:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "8270:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8195:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8248:5:11",
														"nodeType": "YulTypedName",
														"src": "8248:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8255:3:11",
														"nodeType": "YulTypedName",
														"src": "8255:3:11",
														"type": ""
													}
												],
												"src": "8195:118:11"
											},
											{
												"body": {
													"nativeSrc": "8445:206:11",
													"nodeType": "YulBlock",
													"src": "8445:206:11",
													"statements": [
														{
															"nativeSrc": "8455:26:11",
															"nodeType": "YulAssignment",
															"src": "8455:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8467:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8467:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8478:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8478:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8463:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8463:3:11"
																},
																"nativeSrc": "8463:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8463:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8455:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8455:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8535:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8535:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8548:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8548:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8559:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8559:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8544:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8544:3:11"
																		},
																		"nativeSrc": "8544:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8544:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8491:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8491:43:11"
																},
																"nativeSrc": "8491:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8491:71:11"
															},
															"nativeSrc": "8491:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8491:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8616:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8616:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8629:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8629:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8640:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8640:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8625:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8625:3:11"
																		},
																		"nativeSrc": "8625:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8625:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8572:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8572:43:11"
																},
																"nativeSrc": "8572:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8572:72:11"
															},
															"nativeSrc": "8572:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8572:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8319:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8409:9:11",
														"nodeType": "YulTypedName",
														"src": "8409:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8421:6:11",
														"nodeType": "YulTypedName",
														"src": "8421:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8429:6:11",
														"nodeType": "YulTypedName",
														"src": "8429:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8440:4:11",
														"nodeType": "YulTypedName",
														"src": "8440:4:11",
														"type": ""
													}
												],
												"src": "8319:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$434(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$434(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$434(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$434(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$434(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$434(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$434(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$434_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$434_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$434_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$434__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$434_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipients and amounts length mi\")\n\n        mstore(add(memPtr, 32), \"smatch.\")\n\n    }\n\n    function abi_encode_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063144fa6d7146100645780636724348214610080578063715018a61461009c5780638da5cb5b146100a6578063f2fde38b146100c4578063fc0c546a146100e0575b5f80fd5b61007e60048036038101906100799190610673565b6100fe565b005b61009a60048036038101906100959190610754565b6101b7565b005b6100a46102b4565b005b6100ae6102c7565b6040516100bb91906107e1565b60405180910390f35b6100de60048036038101906100d99190610824565b6102ee565b005b6100e8610372565b6040516100f591906108aa565b60405180910390f35b610106610397565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b9061091d565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101bf610397565b818190508484905014610207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fe906109ab565b60405180910390fd5b5f5b848490508110156102ad576102a085858381811061022a576102296109c9565b5b905060200201602081019061023f9190610824565b848484818110610252576102516109c9565b5b9050602002013560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661041e9092919063ffffffff16565b8080600101915050610209565b5050505050565b6102bc610397565b6102c55f61049d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f6610397565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610366575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161035d91906107e1565b60405180910390fd5b61036f8161049d565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61039f61055e565b73ffffffffffffffffffffffffffffffffffffffff166103bd6102c7565b73ffffffffffffffffffffffffffffffffffffffff161461041c576103e061055e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161041391906107e1565b60405180910390fd5b565b610498838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610451929190610a0e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610565565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610584576040513d5f823e3d81fd5b3d92505f519150505f821461059d5760018114156105b8565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156105fa57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016105f191906107e1565b60405180910390fd5b50505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61063182610608565b9050919050565b5f61064282610627565b9050919050565b61065281610638565b811461065c575f80fd5b50565b5f8135905061066d81610649565b92915050565b5f6020828403121561068857610687610600565b5b5f6106958482850161065f565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126106bf576106be61069e565b5b8235905067ffffffffffffffff8111156106dc576106db6106a2565b5b6020830191508360208202830111156106f8576106f76106a6565b5b9250929050565b5f8083601f8401126107145761071361069e565b5b8235905067ffffffffffffffff811115610731576107306106a2565b5b60208301915083602082028301111561074d5761074c6106a6565b5b9250929050565b5f805f806040858703121561076c5761076b610600565b5b5f85013567ffffffffffffffff81111561078957610788610604565b5b610795878288016106aa565b9450945050602085013567ffffffffffffffff8111156107b8576107b7610604565b5b6107c4878288016106ff565b925092505092959194509250565b6107db81610627565b82525050565b5f6020820190506107f45f8301846107d2565b92915050565b61080381610627565b811461080d575f80fd5b50565b5f8135905061081e816107fa565b92915050565b5f6020828403121561083957610838610600565b5b5f61084684828501610810565b91505092915050565b5f819050919050565b5f61087261086d61086884610608565b61084f565b610608565b9050919050565b5f61088382610858565b9050919050565b5f61089482610879565b9050919050565b6108a48161088a565b82525050565b5f6020820190506108bd5f83018461089b565b92915050565b5f82825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f2e0000005f82015250565b5f610907601d836108c3565b9150610912826108d3565b602082019050919050565b5f6020820190508181035f830152610934816108fb565b9050919050565b7f526563697069656e747320616e6420616d6f756e7473206c656e677468206d695f8201527f736d617463682e00000000000000000000000000000000000000000000000000602082015250565b5f6109956027836108c3565b91506109a08261093b565b604082019050919050565b5f6020820190508181035f8301526109c281610989565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b610a08816109f6565b82525050565b5f604082019050610a215f8301856107d2565b610a2e60208301846109ff565b939250505056fea2646970667358221220e8e30c592e62dc4fb24f225785c2a9f2c1f0624034666595ffd19cbf92208cc464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x67243482 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x397 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x397 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x207 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH2 0x2A0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x9C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x252 JUMPI PUSH2 0x251 PUSH2 0x9C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x209 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x397 JUMP JUMPDEST PUSH2 0x2C5 PUSH0 PUSH2 0x49D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x397 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x366 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x49D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x55E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BD PUSH2 0x2C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x41C JUMPI PUSH2 0x3E0 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x498 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x451 SWAP3 SWAP2 SWAP1 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x565 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x59D JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x5B8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x5FA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x631 DUP3 PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x642 DUP3 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x652 DUP2 PUSH2 0x638 JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66D DUP2 PUSH2 0x649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x695 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6BF JUMPI PUSH2 0x6BE PUSH2 0x69E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6DB PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x6F7 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x69E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH2 0x76B PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0x604 JUMP JUMPDEST JUMPDEST PUSH2 0x795 DUP8 DUP3 DUP9 ADD PUSH2 0x6AA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x604 JUMP JUMPDEST JUMPDEST PUSH2 0x7C4 DUP8 DUP3 DUP9 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x7D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x81E DUP2 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x600 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x872 PUSH2 0x86D PUSH2 0x868 DUP5 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x883 DUP3 PUSH2 0x858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x894 DUP3 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A4 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BD PUSH0 DUP4 ADD DUP5 PUSH2 0x89B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F2E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x907 PUSH1 0x1D DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x912 DUP3 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x934 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E747320616E6420616D6F756E7473206C656E677468206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x736D617463682E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x995 PUSH1 0x27 DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A0 DUP3 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C2 DUP2 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA21 PUSH0 DUP4 ADD DUP6 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0xA2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE3 0xC MSIZE 0x2E PUSH3 0xDC4FB2 0x4F 0x22 JUMPI DUP6 0xC2 0xA9 CALLCODE 0xC1 CREATE PUSH3 0x403466 PUSH6 0x95FFD19CBF92 KECCAK256 DUP13 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "512:1462:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1255:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;635:19:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1808:164;1531:13:1;:11;:13::i;:::-;1905:1:0::1;1878:29;;1886:6;1878:29;;::::0;1870:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1959:6;1951:5;;:14;;;;;;;;;;;;;;;;;;1808:164:::0;:::o;1255:392::-;1531:13:1;:11;:13::i;:::-;1389:7:0::1;;:14;;1368:10;;:17;;:35;1360:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:9;1523:118;1547:10;;:17;;1543:1;:21;1523:118;;;1585:45;1604:10;;1615:1;1604:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1619:7;;1627:1;1619:10;;;;;;;:::i;:::-;;;;;;;;1585:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;1566:3;;;;;;;1523:118;;;;1255:392:::0;;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;635:19:0:-;;;;;;;;;;;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1271:160:6:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;6550:720:6:-;6630:18;6658:19;6796:4;6793:1;6786:4;6780:11;6773:4;6767;6763:15;6760:1;6753:5;6746;6741:60;6853:7;6843:176;;6897:4;6891:11;6942:16;6939:1;6934:3;6919:40;6988:16;6983:3;6976:29;6843:176;7046:16;7032:30;;7096:1;7090:8;7075:23;;6712:396;7136:1;7122:10;:15;:68;;7189:1;7174:11;:16;;7122:68;;;7170:1;7148:5;7140:26;;;:31;7122:68;7118:146;;;7246:5;7213:40;;;;;;;;;;;:::i;:::-;;;;;;;;7118:146;6620:650;;6550:720;;:::o;88:117:11:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:167::-;900:5;938:6;925:20;916:29;;954:47;995:5;954:47;:::i;:::-;840:167;;;;:::o;1013:357::-;1086:6;1135:2;1123:9;1114:7;1110:23;1106:32;1103:119;;;1141:79;;:::i;:::-;1103:119;1261:1;1286:67;1345:7;1336:6;1325:9;1321:22;1286:67;:::i;:::-;1276:77;;1232:131;1013:357;;;;:::o;1376:117::-;1485:1;1482;1475:12;1499:117;1608:1;1605;1598:12;1622:117;1731:1;1728;1721:12;1762:568;1835:8;1845:6;1895:3;1888:4;1880:6;1876:17;1872:27;1862:122;;1903:79;;:::i;:::-;1862:122;2016:6;2003:20;1993:30;;2046:18;2038:6;2035:30;2032:117;;;2068:79;;:::i;:::-;2032:117;2182:4;2174:6;2170:17;2158:29;;2236:3;2228:4;2220:6;2216:17;2206:8;2202:32;2199:41;2196:128;;;2243:79;;:::i;:::-;2196:128;1762:568;;;;;:::o;2353:::-;2426:8;2436:6;2486:3;2479:4;2471:6;2467:17;2463:27;2453:122;;2494:79;;:::i;:::-;2453:122;2607:6;2594:20;2584:30;;2637:18;2629:6;2626:30;2623:117;;;2659:79;;:::i;:::-;2623:117;2773:4;2765:6;2761:17;2749:29;;2827:3;2819:4;2811:6;2807:17;2797:8;2793:32;2790:41;2787:128;;;2834:79;;:::i;:::-;2787:128;2353:568;;;;;:::o;2927:934::-;3049:6;3057;3065;3073;3122:2;3110:9;3101:7;3097:23;3093:32;3090:119;;;3128:79;;:::i;:::-;3090:119;3276:1;3265:9;3261:17;3248:31;3306:18;3298:6;3295:30;3292:117;;;3328:79;;:::i;:::-;3292:117;3441:80;3513:7;3504:6;3493:9;3489:22;3441:80;:::i;:::-;3423:98;;;;3219:312;3598:2;3587:9;3583:18;3570:32;3629:18;3621:6;3618:30;3615:117;;;3651:79;;:::i;:::-;3615:117;3764:80;3836:7;3827:6;3816:9;3812:22;3764:80;:::i;:::-;3746:98;;;;3541:313;2927:934;;;;;;;:::o;3867:118::-;3954:24;3972:5;3954:24;:::i;:::-;3949:3;3942:37;3867:118;;:::o;3991:222::-;4084:4;4122:2;4111:9;4107:18;4099:26;;4135:71;4203:1;4192:9;4188:17;4179:6;4135:71;:::i;:::-;3991:222;;;;:::o;4219:122::-;4292:24;4310:5;4292:24;:::i;:::-;4285:5;4282:35;4272:63;;4331:1;4328;4321:12;4272:63;4219:122;:::o;4347:139::-;4393:5;4431:6;4418:20;4409:29;;4447:33;4474:5;4447:33;:::i;:::-;4347:139;;;;:::o;4492:329::-;4551:6;4600:2;4588:9;4579:7;4575:23;4571:32;4568:119;;;4606:79;;:::i;:::-;4568:119;4726:1;4751:53;4796:7;4787:6;4776:9;4772:22;4751:53;:::i;:::-;4741:63;;4697:117;4492:329;;;;:::o;4827:60::-;4855:3;4876:5;4869:12;;4827:60;;;:::o;4893:142::-;4943:9;4976:53;4994:34;5003:24;5021:5;5003:24;:::i;:::-;4994:34;:::i;:::-;4976:53;:::i;:::-;4963:66;;4893:142;;;:::o;5041:126::-;5091:9;5124:37;5155:5;5124:37;:::i;:::-;5111:50;;5041:126;;;:::o;5173:140::-;5237:9;5270:37;5301:5;5270:37;:::i;:::-;5257:50;;5173:140;;;:::o;5319:159::-;5420:51;5465:5;5420:51;:::i;:::-;5415:3;5408:64;5319:159;;:::o;5484:250::-;5591:4;5629:2;5618:9;5614:18;5606:26;;5642:85;5724:1;5713:9;5709:17;5700:6;5642:85;:::i;:::-;5484:250;;;;:::o;5740:169::-;5824:11;5858:6;5853:3;5846:19;5898:4;5893:3;5889:14;5874:29;;5740:169;;;;:::o;5915:179::-;6055:31;6051:1;6043:6;6039:14;6032:55;5915:179;:::o;6100:366::-;6242:3;6263:67;6327:2;6322:3;6263:67;:::i;:::-;6256:74;;6339:93;6428:3;6339:93;:::i;:::-;6457:2;6452:3;6448:12;6441:19;;6100:366;;;:::o;6472:419::-;6638:4;6676:2;6665:9;6661:18;6653:26;;6725:9;6719:4;6715:20;6711:1;6700:9;6696:17;6689:47;6753:131;6879:4;6753:131;:::i;:::-;6745:139;;6472:419;;;:::o;6897:226::-;7037:34;7033:1;7025:6;7021:14;7014:58;7106:9;7101:2;7093:6;7089:15;7082:34;6897:226;:::o;7129:366::-;7271:3;7292:67;7356:2;7351:3;7292:67;:::i;:::-;7285:74;;7368:93;7457:3;7368:93;:::i;:::-;7486:2;7481:3;7477:12;7470:19;;7129:366;;;:::o;7501:419::-;7667:4;7705:2;7694:9;7690:18;7682:26;;7754:9;7748:4;7744:20;7740:1;7729:9;7725:17;7718:47;7782:131;7908:4;7782:131;:::i;:::-;7774:139;;7501:419;;;:::o;7926:180::-;7974:77;7971:1;7964:88;8071:4;8068:1;8061:15;8095:4;8092:1;8085:15;8112:77;8149:7;8178:5;8167:16;;8112:77;;;:::o;8195:118::-;8282:24;8300:5;8282:24;:::i;:::-;8277:3;8270:37;8195:118;;:::o;8319:332::-;8440:4;8478:2;8467:9;8463:18;8455:26;;8491:71;8559:1;8548:9;8544:17;8535:6;8491:71;:::i;:::-;8572:72;8640:2;8629:9;8625:18;8616:6;8572:72;:::i;:::-;8319:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "533400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"airdrop(address[],uint256[])": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"setToken(address)": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 810,
									"end": 969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 810,
									"end": 969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 845,
									"end": 855,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 875,
									"end": 904,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 875,
									"end": 904,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 883,
									"end": 889,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 875,
									"end": 904,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 875,
									"end": 904,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 875,
									"end": 904,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 867,
									"end": 938,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 867,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 956,
									"end": 962,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 948,
									"end": 953,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 948,
									"end": 953,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 948,
									"end": 962,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 810,
									"end": 969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1507,
									"end": 1512,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1489,
									"end": 1513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1489,
									"end": 1513,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1514,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1619,
									"end": 1623,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1655,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1634,
									"end": 1660,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1670,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1670,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1838,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1872,
									"end": 1878,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1867,
									"end": 1870,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1879,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1916,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1907,
									"end": 1910,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1917,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1888,
									"end": 1917,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1888,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1754,
									"end": 1923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1929,
									"end": 2108,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1929,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2100,
									"name": "PUSH",
									"source": 11,
									"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F2E000000"
								},
								{
									"begin": 2065,
									"end": 2066,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2057,
									"end": 2063,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2053,
									"end": 2067,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2046,
									"end": 2101,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1929,
									"end": 2108,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1929,
									"end": 2108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2114,
									"end": 2480,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2114,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2341,
									"end": 2343,
									"name": "PUSH",
									"source": 11,
									"value": "1D"
								},
								{
									"begin": 2336,
									"end": 2339,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2277,
									"end": 2344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2277,
									"end": 2344,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2277,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2270,
									"end": 2344,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2270,
									"end": 2344,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2442,
									"end": 2445,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2353,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2446,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2353,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2471,
									"end": 2473,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2466,
									"end": 2469,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2474,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2455,
									"end": 2474,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2455,
									"end": 2474,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2114,
									"end": 2480,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2114,
									"end": 2480,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2114,
									"end": 2480,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2114,
									"end": 2480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2486,
									"end": 2905,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2486,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2652,
									"end": 2656,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2690,
									"end": 2692,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2679,
									"end": 2688,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2675,
									"end": 2693,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2667,
									"end": 2693,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2667,
									"end": 2693,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2739,
									"end": 2748,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2733,
									"end": 2737,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2729,
									"end": 2749,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 2726,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2710,
									"end": 2727,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2703,
									"end": 2750,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2767,
									"end": 2898,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2893,
									"end": 2897,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2767,
									"end": 2898,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2767,
									"end": 2898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2767,
									"end": 2898,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2767,
									"end": 2898,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2759,
									"end": 2898,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2759,
									"end": 2898,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2486,
									"end": 2905,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2486,
									"end": 2905,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2486,
									"end": 2905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2486,
									"end": 2905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 1974,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8e30c592e62dc4fb24f225785c2a9f2c1f0624034666595ffd19cbf92208cc464736f6c634300081a0033",
									".code": [
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "144FA6D7"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "67243482"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 1974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1808,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1808,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1255,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1255,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 635,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1878,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1878,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 1907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1870,
											"end": 1941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1870,
											"end": 1941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1403,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1360,
											"end": 1447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1360,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1528,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1547,
											"end": 1564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1564,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1604,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1604,
											"end": 1617,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1604,
											"end": 1617,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1604,
											"end": 1617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1619,
											"end": 1629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1629,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1603,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1585,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1585,
											"end": 1630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7270,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6550,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6758,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6751,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6801,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6860,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6843,
											"end": 7019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6891,
											"end": 6902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6958,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6959,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7004,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 7005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6843,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7098,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7132,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7174,
											"end": 7185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7153,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7166,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7166,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7171,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7122,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 7118,
											"end": 7264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7246,
											"end": 7251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7213,
											"end": 7253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7264,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 7118,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 7270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 7270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 7270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 7270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 7270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 568,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 568,
											"end": 678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 568,
											"end": 678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 684,
											"end": 834,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 684,
											"end": 834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 771,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 809,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 771,
											"end": 809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 761,
											"end": 810,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 751,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 814,
											"end": 826,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 751,
											"end": 828,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 684,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 684,
											"end": 834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 900,
											"end": 905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 925,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 916,
											"end": 945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 916,
											"end": 945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 954,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 1007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1106,
											"end": 1138,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1141,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1286,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1353,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1493,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1376,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 1487,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1499,
											"end": 1616,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1499,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1739,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1622,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1733,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1895,
											"end": 1898,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1888,
											"end": 1892,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1862,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1862,
											"end": 1984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1903,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1903,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1982,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1903,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1862,
											"end": 1984,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1862,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2065,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2068,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2068,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2147,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2068,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2032,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2186,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2187,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2206,
											"end": 2214,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2240,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2324,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2196,
											"end": 2324,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2243,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2324,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2196,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2426,
											"end": 2434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2486,
											"end": 2489,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2483,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2467,
											"end": 2484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2490,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2453,
											"end": 2575,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2494,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2575,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2453,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2594,
											"end": 2614,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2659,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2659,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2738,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2659,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2830,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2823,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2807,
											"end": 2824,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2805,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2831,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2915,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2787,
											"end": 2915,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2834,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2834,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2787,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2353,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3128,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3248,
											"end": 3279,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3325,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3328,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3292,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3513,
											"end": 3520,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3441,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3521,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3441,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3521,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3521,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3531,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3602,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3648,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3732,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3615,
											"end": 3732,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3651,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3651,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3730,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3651,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3732,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3615,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3764,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3844,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3764,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3985,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3867,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3954,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3978,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3954,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3952,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 3979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4099,
											"end": 4125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4135,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4206,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4135,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4341,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4219,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4310,
											"end": 4315,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 4292,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4316,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4292,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4317,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4333,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4272,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4393,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4418,
											"end": 4438,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4409,
											"end": 4438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4409,
											"end": 4438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4474,
											"end": 4479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4447,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4480,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4447,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4347,
											"end": 4486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4586,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4598,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4571,
											"end": 4603,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4687,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4568,
											"end": 4687,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4606,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4685,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4687,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4568,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4796,
											"end": 4803,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4793,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4751,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4804,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4751,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4804,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4887,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4827,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5035,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4893,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5021,
											"end": 5026,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5003,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4994,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4963,
											"end": 5029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4963,
											"end": 5029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5035,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5167,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5041,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5091,
											"end": 5100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5124,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5124,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5124,
											"end": 5161,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5124,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5167,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5313,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5173,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5270,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5270,
											"end": 5307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5270,
											"end": 5307,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5270,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5313,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5478,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5319,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5465,
											"end": 5470,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5420,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5471,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5420,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5472,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5319,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5724,
											"end": 5725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5709,
											"end": 5726,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5706,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5642,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5727,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5642,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5865,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5889,
											"end": 5903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 6094,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5915,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6055,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F2E000000"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 6094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 6094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6466,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6100,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6242,
											"end": 6245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 6263,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6263,
											"end": 6330,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 6263,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6330,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 6339,
											"end": 6432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6432,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 6339,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6455,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6448,
											"end": 6460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6891,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 6472,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6653,
											"end": 6679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6653,
											"end": 6679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6734,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6719,
											"end": 6723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6715,
											"end": 6735,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6713,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6879,
											"end": 6883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6753,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6884,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6753,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6891,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 7123,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 6897,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7037,
											"end": 7071,
											"name": "PUSH",
											"source": 11,
											"value": "526563697069656E747320616E6420616D6F756E7473206C656E677468206D69"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7031,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "736D617463682E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7101,
											"end": 7103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7116,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 7123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7495,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 7129,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 7292,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7359,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 7292,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7359,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 7368,
											"end": 7461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7368,
											"end": 7461,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 7368,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7477,
											"end": 7489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7470,
											"end": 7489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7470,
											"end": 7489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7920,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 7501,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7707,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7694,
											"end": 7703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7754,
											"end": 7763,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 7765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 7782,
											"end": 7913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7913,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7782,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 7913,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 7913,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7501,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8106,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 7926,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8051,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7971,
											"end": 7972,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7964,
											"end": 8052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8071,
											"end": 8075,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8068,
											"end": 8069,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8061,
											"end": 8076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8099,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8092,
											"end": 8093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8100,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8189,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 8112,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8156,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8183,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8313,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 8195,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8300,
											"end": 8305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 8282,
											"end": 8306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8282,
											"end": 8306,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8282,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8480,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8467,
											"end": 8476,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8463,
											"end": 8481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8491,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8557,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8544,
											"end": 8561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8535,
											"end": 8541,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8491,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8491,
											"end": 8562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8491,
											"end": 8562,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8491,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8572,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8640,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8638,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8625,
											"end": 8643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8622,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8572,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 8572,
											"end": 8644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8572,
											"end": 8644,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8572,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/WinnerList_Airdrop.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"airdrop(address[],uint256[])": "67243482",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setToken(address)": "144fa6d7",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Bu kontrat, belirli adreslere ERC20 token airdrop'u yap\\u0131lmas\\u0131n\\u0131 sa\\u011flar.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"airdrop(address[],uint256[])\":{\"details\":\"Sadece admin bu i\\u015flemi ger\\u00e7ekle\\u015ftirebilir.\",\"params\":{\"amounts\":\"Her bir adres i\\u00e7in airdrop miktarlar\\u0131n\\u0131n listesi\",\"recipients\":\"Airdrop yap\\u0131lacak adreslerin listesi\"}},\"constructor\":{\"details\":\"Kontrat\\u0131 ba\\u015flat\\u0131r ve airdrop yap\\u0131lacak token adresini belirler.\",\"params\":{\"_token\":\"Airdrop yap\\u0131lacak token adresi\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setToken(address)\":{\"details\":\"Sadece admin bu i\\u015flemi ger\\u00e7ekle\\u015ftirebilir.\",\"params\":{\"_token\":\"Yeni token adresi\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AirdropContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdrop(address[],uint256[])\":{\"notice\":\"Admin taraf\\u0131ndan belirlenen adreslere airdrop yapar.\"},\"setToken(address)\":{\"notice\":\"Token adresini g\\u00fcnceller.\"},\"token()\":{\"notice\":\"Airdrop yap\\u0131lacak token adresi\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WinnerList_Airdrop.sol\":\"AirdropContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WinnerList_Airdrop.sol\":{\"keccak256\":\"0x95deda509c9fc8770c6140aee8362a955cac2daf233adc03f34ac7dd71845ab4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8763b57b1f3fab95f483d0dbf51d341c57964576c024df62b2cbfaa38aacc69d\",\"dweb:/ipfs/QmY4R5HQHSPSTpDHYtZC7FQpp9aREsA3JmCMtuSKgTR2at\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "contracts/WinnerList_Airdrop.sol:AirdropContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "contracts/WinnerList_Airdrop.sol:AirdropContract",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)434"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)434": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"airdrop(address[],uint256[])": {
								"notice": "Admin tarafından belirlenen adreslere airdrop yapar."
							},
							"setToken(address)": {
								"notice": "Token adresini günceller."
							},
							"token()": {
								"notice": "Airdrop yapılacak token adresi"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":750:8254  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":750:8254  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f81257ed8d8bb0b0f1bbdde6897fe59285bfab2e5db89d4e42d4fe667b3784ca64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f81257ed8d8bb0b0f1bbdde6897fe59285bfab2e5db89d4e42d4fe667b3784ca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SLT JUMPI 0xED DUP14 DUP12 0xB0 0xB0 CALL 0xBB 0xDD 0xE6 DUP10 PUSH32 0xE59285BFAB2E5DB89D4E42D4FE667B3784CA64736F6C634300081A0033000000 ",
							"sourceMap": "750:7504:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f81257ed8d8bb0b0f1bbdde6897fe59285bfab2e5db89d4e42d4fe667b3784ca64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SLT JUMPI 0xED DUP14 DUP12 0xB0 0xB0 CALL 0xBB 0xDD 0xE6 DUP10 PUSH32 0xE59285BFAB2E5DB89D4E42D4FE667B3784CA64736F6C634300081A0033000000 ",
							"sourceMap": "750:7504:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8254,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f81257ed8d8bb0b0f1bbdde6897fe59285bfab2e5db89d4e42d4fe667b3784ca64736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 8254,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8254,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/WinnerList_Airdrop.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6063  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6063  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122043e4cd84a3c51bd137dd744dc86c95011631f827287bf362d2bce28ae623795b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122043e4cd84a3c51bd137dd744dc86c95011631f827287bf362d2bce28ae623795b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 0xCD DUP5 LOG3 0xC5 SHL 0xD1 CALLDATACOPY 0xDD PUSH21 0x4DC86C95011631F827287BF362D2BCE28AE623795B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5830:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122043e4cd84a3c51bd137dd744dc86c95011631f827287bf362d2bce28ae623795b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE4 0xCD DUP5 LOG3 0xC5 SHL 0xD1 CALLDATACOPY 0xDD PUSH21 0x4DC86C95011631F827287BF362D2BCE28AE623795B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5830:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043e4cd84a3c51bd137dd744dc86c95011631f827287bf362d2bce28ae623795b64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/WinnerList_Airdrop.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":314:798  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":314:798  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220150ecaab114368ea1cebf603e8b1859539e4560aec23a606900b2284b44b39d164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220150ecaab114368ea1cebf603e8b1859539e4560aec23a606900b2284b44b39d164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE 0xCA 0xAB GT NUMBER PUSH9 0xEA1CEBF603E8B18595 CODECOPY 0xE4 JUMP EXP 0xEC 0x23 0xA6 MOD SWAP1 SIGNEXTEND 0x22 DUP5 0xB4 0x4B CODECOPY 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "314:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220150ecaab114368ea1cebf603e8b1859539e4560aec23a606900b2284b44b39d164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE 0xCA 0xAB GT NUMBER PUSH9 0xEA1CEBF603E8B18595 CODECOPY 0xE4 JUMP EXP 0xEC 0x23 0xA6 MOD SWAP1 SIGNEXTEND 0x22 DUP5 0xB4 0x4B CODECOPY 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "314:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 314,
									"end": 798,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220150ecaab114368ea1cebf603e8b1859539e4560aec23a606900b2284b44b39d164736f6c634300081a0033",
									".code": [
										{
											"begin": 314,
											"end": 798,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 314,
											"end": 798,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 314,
											"end": 798,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 314,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 314,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 314,
											"end": 798,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/WinnerList_Airdrop.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0xc452b8c0ab5a57e6ca49c4fbe6aead2460c2f8d60d58bc60af68e559b7ca1179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0980b3b9e8cd9d9a0f2ae848f0f36a85158887e6fd961142a13b11299ae7f30a\",\"dweb:/ipfs/QmUrmDji3NR2V3YezV8xHSS3wjeBKq16FL7cHdBCnwLjKd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/WinnerList_Airdrop.sol": {
				"ast": {
					"absolutePath": "contracts/WinnerList_Airdrop.sol",
					"exportedSymbols": {
						"Address": [
							1104
						],
						"AirdropContract": [
							118
						],
						"Context": [
							1134
						],
						"IERC1363": [
							348
						],
						"IERC20": [
							434
						],
						"Ownable": [
							266
						],
						"SafeERC20": [
							845
						]
					},
					"id": 119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 119,
							"sourceUnit": 435,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 119,
							"sourceUnit": 846,
							"src": "168:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 119,
							"sourceUnit": 267,
							"src": "287:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nameLocations": [
											"540:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "540:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "540:7:0"
								}
							],
							"canonicalName": "AirdropContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "394:117:0",
								"text": " @title AirdropContract\n @dev Bu kontrat, belirli adreslere ERC20 token airdrop'u yapılmasını sağlar."
							},
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118,
								266,
								1134
							],
							"name": "AirdropContract",
							"nameLocation": "521:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 11,
									"libraryName": {
										"id": 8,
										"name": "SafeERC20",
										"nameLocations": [
											"560:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "560:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "554:27:0",
									"typeName": {
										"id": 10,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 9,
											"name": "IERC20",
											"nameLocations": [
												"574:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 434,
											"src": "574:6:0"
										},
										"referencedDeclaration": 434,
										"src": "574:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$434",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "587:43:0",
										"text": "@notice Airdrop yapılacak token adresi"
									},
									"functionSelector": "fc0c546a",
									"id": 15,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "649:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "635:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$434",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 14,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 13,
											"name": "IERC20",
											"nameLocations": [
												"635:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 434,
											"src": "635:6:0"
										},
										"referencedDeclaration": 434,
										"src": "635:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$434",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "857:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 29,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "883:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "875:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 27,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "875:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "875:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 33,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "902:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 31,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "875:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f2e",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																"typeString": "literal_string \"Token address cannot be zero.\""
															},
															"value": "Token address cannot be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																"typeString": "literal_string \"Token address cannot be zero.\""
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "867:71:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "948:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$434",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "956:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$434",
															"typeString": "contract IERC20"
														}
													},
													"src": "948:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "948:14:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "661:144:0",
										"text": " @dev Kontratı başlatır ve airdrop yapılacak token adresini belirler.\n @param _token Airdrop yapılacak token adresi"
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 22,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "845:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "849:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "845:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 24,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 21,
												"name": "Ownable",
												"nameLocations": [
													"837:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "837:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "837:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "829:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 18,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 17,
														"name": "IERC20",
														"nameLocations": [
															"822:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "822:6:0"
													},
													"referencedDeclaration": 434,
													"src": "822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:15:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 118,
									"src": "810:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1350:297:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 57,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1379:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1368:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 59,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1389:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1397:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1389:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1368:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e747320616e6420616d6f756e7473206c656e677468206d69736d617463682e",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1405:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e",
																"typeString": "literal_string \"Recipients and amounts length mismatch.\""
															},
															"value": "Recipients and amounts length mismatch."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_546e0c082abc611b9fc68367c930738bc68a14f053a79fc287d9447868739c2e",
																"typeString": "literal_string \"Recipients and amounts length mismatch.\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1360:87:0"
											},
											{
												"body": {
													"id": 87,
													"nodeType": "Block",
													"src": "1571:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 79,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "1604:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 81,
																		"indexExpression": {
																			"id": 80,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1615:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1604:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 82,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "1619:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 84,
																		"indexExpression": {
																			"id": 83,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1627:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1619:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 76,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1585:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1591:12:0",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "1585:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$434_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1585:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 86,
															"nodeType": "ExpressionStatement",
															"src": "1585:45:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 69,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1543:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 70,
															"name": "recipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1547:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1558:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1547:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1543:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"initializationExpression": {
													"assignments": [
														66
													],
													"declarations": [
														{
															"constant": false,
															"id": 66,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1536:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 88,
															"src": "1528:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 65,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 68,
													"initialValue": {
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1528:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1566:3:0",
														"subExpression": {
															"id": 73,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 75,
													"nodeType": "ExpressionStatement",
													"src": "1566:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1523:118:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "975:275:0",
										"text": " @notice Admin tarafından belirlenen adreslere airdrop yapar.\n @dev Sadece admin bu işlemi gerçekleştirebilir.\n @param recipients Airdrop yapılacak adreslerin listesi\n @param amounts Her bir adres için airdrop miktarlarının listesi"
									},
									"functionSelector": "67243482",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 54,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 53,
												"name": "onlyOwner",
												"nameLocations": [
													"1340:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1340:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1340:9:0"
										}
									],
									"name": "airdrop",
									"nameLocation": "1264:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "1291:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1272:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 46,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1272:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 47,
													"nodeType": "ArrayTypeName",
													"src": "1272:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1303:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 49,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 50,
													"nodeType": "ArrayTypeName",
													"src": "1303:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:59:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1350:0:0"
									},
									"scope": 118,
									"src": "1255:392:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1860:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 102,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 94,
																		"src": "1886:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1878:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1878:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1905:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1897:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1897:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1878:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f2e",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1909:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																"typeString": "literal_string \"Token address cannot be zero.\""
															},
															"value": "Token address cannot be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d948b3e3be8dd89a609664996c85e287ac6b7a248393967a7079219f764483a",
																"typeString": "literal_string \"Token address cannot be zero.\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1870:71:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1951:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$434",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 113,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1959:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$434",
															"typeString": "contract IERC20"
														}
													},
													"src": "1951:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1951:14:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1653:150:0",
										"text": " @notice Token adresini günceller.\n @dev Sadece admin bu işlemi gerçekleştirebilir.\n @param _token Yeni token adresi"
									},
									"functionSelector": "144fa6d7",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 97,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 96,
												"name": "onlyOwner",
												"nameLocations": [
													"1850:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1850:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1850:9:0"
										}
									],
									"name": "setToken",
									"nameLocation": "1817:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1833:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 93,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 92,
														"name": "IERC20",
														"nameLocations": [
															"1826:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "1826:6:0"
													},
													"referencedDeclaration": 434,
													"src": "1826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:0"
									},
									"scope": 118,
									"src": "1808:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 119,
							"src": "512:1462:0",
							"usedErrors": [
								132,
								137,
								448
							],
							"usedEvents": [
								143
							]
						}
					],
					"src": "32:1943:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1134
						],
						"Ownable": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 122,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 267,
							"sourceUnit": 1135,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 121,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "692:7:1"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266,
								1134
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 266,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 126,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 132,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 137,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 143,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 149,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 150,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 163,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 162,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 156,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 155,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 161,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 169,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 266,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 172,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 175,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 177,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 266,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 190,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 192,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 200,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 196,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 195,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 199,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 266,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 209,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 266,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 225,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 226,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 232,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 231,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 237,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 240,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 222,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 266,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 264,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 251,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"id": 253,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 260,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 259,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 266,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "663:2438:1",
							"usedErrors": [
								132,
								137
							],
							"usedEvents": [
								143
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							348
						],
						"IERC165": [
							1168
						],
						"IERC20": [
							434
						]
					},
					"id": 349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 349,
							"sourceUnit": 357,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 269,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 434,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 349,
							"sourceUnit": 353,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 271,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 274,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 434,
										"src": "590:6:2"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 276,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "598:7:2"
									},
									"id": 277,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 348,
							"linearizedBaseContracts": [
								348,
								1168,
								434
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 348,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 348,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 348,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 348,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 348,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 348,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 349,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								368,
								377
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1168
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 1169,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 351,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							434
						]
					},
					"id": 357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 435,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 355,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 434,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							434
						]
					},
					"id": 435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 359,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 434,
							"linearizedBaseContracts": [
								434
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 368,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 377,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 434,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 434,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 434,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 434,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 434,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 434,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 435,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								368,
								377
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1104
						],
						"IERC1363": [
							348
						],
						"IERC20": [
							434
						],
						"SafeERC20": [
							845
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 435,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 437,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 434,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 349,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 439,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 348,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 1105,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 441,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1104,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 443,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 448,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:6"
									},
									"src": "844:46:6"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 457,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "1054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:6"
									},
									"src": "972:109:6"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1343:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 472,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "1395:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 401,
																	"src": "1395:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 474,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "1412:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 475,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "1416:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 476,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 470,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 468,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1353:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:6"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 459,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "1293:6:6"
													},
													"referencedDeclaration": 434,
													"src": "1293:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1307:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:6"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:6"
									},
									"scope": 845,
									"src": "1271:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1760:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1790:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 498,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "1812:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 433,
																	"src": "1812:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 500,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "1833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "1839:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "1843:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 494,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1770:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:6"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1696:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 483,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "1696:6:6"
													},
													"referencedDeclaration": 434,
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1736:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:6"
									},
									"scope": 845,
									"src": "1670:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "2135:139:6",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2153:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "2145:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2145:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2192:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$845",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$845",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2184:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 523,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2184:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2184:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "2199:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 521,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2168:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2174:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "2168:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2145:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2230:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 532,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "2237:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "2246:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "2261:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2246:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$434",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2217:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2217:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "2217:50:6"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1864:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2058:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2087:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2080:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 510,
														"name": "IERC20",
														"nameLocations": [
															"2080:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "2080:6:6"
													},
													"referencedDeclaration": 434,
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2102:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2094:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2111:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:46:6"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:6"
									},
									"scope": 845,
									"src": "2049:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "2575:370:6",
										"statements": [
											{
												"id": 580,
												"nodeType": "UncheckedBlock",
												"src": "2585:354:6",
												"statements": [
													{
														"assignments": [
															551
														],
														"declarations": [
															{
																"constant": false,
																"id": 551,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2617:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 580,
																"src": "2609:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 550,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2609:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 560,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 556,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2660:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$845",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$845",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2652:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 554,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2652:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2652:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 558,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2667:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 552,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "2636:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$434",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2642:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "2636:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2636:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2609:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "2693:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 562,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "2712:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2693:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 571,
														"nodeType": "IfStatement",
														"src": "2689:160:6",
														"trueBody": {
															"id": 570,
															"nodeType": "Block",
															"src": "2731:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 565,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 545,
																				"src": "2789:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 566,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "2798:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 567,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 547,
																				"src": "2816:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 564,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "2756:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2756:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 569,
																	"nodeType": "RevertStatement",
																	"src": "2749:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 573,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "2875:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$434",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 574,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2882:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 575,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "2891:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 576,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "2910:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2891:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$434",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 572,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "2862:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2862:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 579,
														"nodeType": "ExpressionStatement",
														"src": "2862:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2280:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2486:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2515:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2508:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 541,
														"name": "IERC20",
														"nameLocations": [
															"2508:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "2508:6:6"
													},
													"referencedDeclaration": 434,
													"src": "2508:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2530:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2522:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2547:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2539:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:58:6"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2575:0:6"
									},
									"scope": 845,
									"src": "2477:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "3341:303:6",
										"statements": [
											{
												"assignments": [
													594
												],
												"declarations": [
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3364:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "3351:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 593,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3351:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 597,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "3394:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$434",
																	"typeString": "contract IERC20"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3400:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 421,
															"src": "3394:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 599,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3410:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 600,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "3419:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 601,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3409:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 595,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3379:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3383:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3379:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3379:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3351:75:6"
											},
											{
												"condition": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3441:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 605,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "3466:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$434",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 606,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "3473:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$434",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 604,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3442:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3442:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "3437:201:6",
												"trueBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "3488:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 610,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "3522:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 613,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 586,
																					"src": "3544:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$434",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3550:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 421,
																				"src": "3544:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 615,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 588,
																						"src": "3560:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 616,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3569:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 617,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3559:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 611,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3529:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3533:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3529:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3529:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 609,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3502:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3502:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 620,
															"nodeType": "ExpressionStatement",
															"src": "3502:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 622,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "3607:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 623,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "3614:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$434",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 621,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3587:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3587:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 625,
															"nodeType": "ExpressionStatement",
															"src": "3587:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2951:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3273:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3293:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "3286:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 585,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 584,
														"name": "IERC20",
														"nameLocations": [
															"3286:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "3286:6:6"
													},
													"referencedDeclaration": 434,
													"src": "3286:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3308:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "3300:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "3317:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:46:6"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:0:6"
									},
									"scope": 845,
									"src": "3264:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "4091:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 642,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "4105:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4108:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4113:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4105:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4105:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4191:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 656,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "4214:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "4218:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 658,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "4225:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 654,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "4192:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$348",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4198:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 299,
																"src": "4192:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 669,
													"nodeType": "IfStatement",
													"src": "4187:117:6",
													"trueBody": {
														"id": 668,
														"nodeType": "Block",
														"src": "4232:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 664,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 633,
																					"src": "4286:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4278:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 662,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4278:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4278:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 661,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "4253:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4253:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 667,
																"nodeType": "RevertStatement",
																"src": "4246:47:6"
															}
														]
													}
												},
												"id": 670,
												"nodeType": "IfStatement",
												"src": "4101:203:6",
												"trueBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "4126:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "4153:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 649,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "4160:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 650,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "4164:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 647,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "4140:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4140:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "4140:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "3650:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "3997:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4029:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4020:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$348",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 631,
														"name": "IERC1363",
														"nameLocations": [
															"4020:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 348,
														"src": "4020:8:6"
													},
													"referencedDeclaration": 348,
													"src": "4020:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$348",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4044:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4036:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4056:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4048:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4076:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4063:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4063:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4019:62:6"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4091:0:6"
									},
									"scope": 845,
									"src": "3988:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "4829:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 687,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4843:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4846:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4843:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4851:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4843:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4861:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4843:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4939:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 702,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "4966:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "4972:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "4976:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 705,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4983:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 700,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "4940:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$348",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4946:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "4940:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4940:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 716,
													"nodeType": "IfStatement",
													"src": "4935:127:6",
													"trueBody": {
														"id": 715,
														"nodeType": "Block",
														"src": "4990:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 711,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "5044:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5036:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 709,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5036:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5036:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 708,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "5011:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5011:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 714,
																"nodeType": "RevertStatement",
																"src": "5004:47:6"
															}
														]
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "4839:223:6",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "4864:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "4895:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 694,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "4902:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4908:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 696,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "4912:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 692,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4878:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4878:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 698,
															"nodeType": "ExpressionStatement",
															"src": "4878:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "4316:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "4671:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4716:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4707:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$348",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 674,
														"name": "IERC1363",
														"nameLocations": [
															"4707:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 348,
														"src": "4707:8:6"
													},
													"referencedDeclaration": 348,
													"src": "4707:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$348",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4739:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4731:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4731:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4761:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4753:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4781:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4773:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4809:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4796:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4796:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:122:6"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4829:0:6"
									},
									"scope": 845,
									"src": "4662:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "5835:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 732,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "5849:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5852:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5849:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5857:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5849:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5867:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5849:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5935:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 746,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "5957:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "5961:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 748,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "5968:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 744,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "5936:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$348",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5942:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 347,
																"src": "5936:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5936:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 759,
													"nodeType": "IfStatement",
													"src": "5931:116:6",
													"trueBody": {
														"id": 758,
														"nodeType": "Block",
														"src": "5975:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 754,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "6029:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$348",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6021:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 752,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6021:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6021:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 751,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "5996:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5996:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 757,
																"nodeType": "RevertStatement",
																"src": "5989:47:6"
															}
														]
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "5845:202:6",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5870:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "5897:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 739,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "5904:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 740,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "5908:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$348",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 737,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "5884:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5884:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "5884:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "5074:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "5742:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5773:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$348",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 721,
														"name": "IERC1363",
														"nameLocations": [
															"5764:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 348,
														"src": "5764:8:6"
													},
													"referencedDeclaration": 348,
													"src": "5764:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$348",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5788:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5780:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5800:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5792:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5792:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5820:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5807:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5807:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5763:62:6"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5835:0:6"
									},
									"scope": 845,
									"src": "5733:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "6620:650:6",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "6638:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "6630:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6630:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"nodeType": "VariableDeclarationStatement",
												"src": "6630:18:6"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "6666:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "6658:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"nodeType": "VariableDeclarationStatement",
												"src": "6658:19:6"
											},
											{
												"AST": {
													"nativeSrc": "6712:396:6",
													"nodeType": "YulBlock",
													"src": "6712:396:6",
													"statements": [
														{
															"nativeSrc": "6726:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6726:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "6746:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6746:3:6"
																		},
																		"nativeSrc": "6746:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6746:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "6753:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6753:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6760:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6760:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6767:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6767:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6773:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6773:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:6"
																		},
																		"nativeSrc": "6763:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6786:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6786:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6780:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6780:5:6"
																		},
																		"nativeSrc": "6780:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6780:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6793:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6793:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6796:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6796:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "6741:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6741:4:6"
																},
																"nativeSrc": "6741:60:6",
																"nodeType": "YulFunctionCall",
																"src": "6741:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "6730:7:6",
																	"nodeType": "YulTypedName",
																	"src": "6730:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6862:157:6",
																"nodeType": "YulBlock",
																"src": "6862:157:6",
																"statements": [
																	{
																		"nativeSrc": "6880:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6880:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6897:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6897:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6891:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6891:5:6"
																			},
																			"nativeSrc": "6891:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "6884:3:6",
																				"nodeType": "YulTypedName",
																				"src": "6884:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "6934:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6934:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6939:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6939:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "6942:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "6942:14:6"
																					},
																					"nativeSrc": "6942:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6942:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "6919:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "6919:14:6"
																			},
																			"nativeSrc": "6919:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6919:40:6"
																		},
																		"nativeSrc": "6919:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6919:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "6983:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6983:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "6988:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "6988:14:6"
																					},
																					"nativeSrc": "6988:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6988:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6976:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6976:6:6"
																			},
																			"nativeSrc": "6976:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6976:29:6"
																		},
																		"nativeSrc": "6976:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6976:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "6853:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6853:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6846:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6846:6:6"
																},
																"nativeSrc": "6846:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6846:15:6"
															},
															"nativeSrc": "6843:176:6",
															"nodeType": "YulIf",
															"src": "6843:176:6"
														},
														{
															"nativeSrc": "7032:30:6",
															"nodeType": "YulAssignment",
															"src": "7032:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "7046:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "7046:14:6"
																},
																"nativeSrc": "7046:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7046:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "7032:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "7032:10:6"
																}
															]
														},
														{
															"nativeSrc": "7075:23:6",
															"nodeType": "YulAssignment",
															"src": "7075:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7096:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7096:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7090:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7090:5:6"
																},
																"nativeSrc": "7090:8:6",
																"nodeType": "YulFunctionCall",
																"src": "7090:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "7075:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7075:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 768,
														"isOffset": false,
														"isSlot": false,
														"src": "6767:4:6",
														"valueSize": 1
													},
													{
														"declaration": 768,
														"isOffset": false,
														"isSlot": false,
														"src": "6786:4:6",
														"valueSize": 1
													},
													{
														"declaration": 772,
														"isOffset": false,
														"isSlot": false,
														"src": "7032:10:6",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "7075:11:6",
														"valueSize": 1
													},
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": false,
														"src": "6753:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 777,
												"nodeType": "InlineAssembly",
												"src": "6687:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 778,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "7122:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7136:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7122:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 789,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7174:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7189:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7174:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7122:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 783,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "7148:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$434",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$434",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7140:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 781,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7140:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7140:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7155:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "7140:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7160:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7140:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7170:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7140:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7118:146:6",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7192:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 796,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "7246:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$434",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$434",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7238:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7238:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7238:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "7213:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7213:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7206:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "6059:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "6559:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6579:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "IERC20",
														"nameLocations": [
															"6579:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "6579:6:6"
													},
													"referencedDeclaration": 434,
													"src": "6579:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6606:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6593:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6593:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6578:33:6"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6620:0:6"
									},
									"scope": 845,
									"src": "6550:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "7861:391:6",
										"statements": [
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7876:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "7871:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 814,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7871:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"nodeType": "VariableDeclarationStatement",
												"src": "7871:12:6"
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7901:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "7893:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"nodeType": "VariableDeclarationStatement",
												"src": "7893:18:6"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7929:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "7921:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 820,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7921:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7975:174:6",
													"nodeType": "YulBlock",
													"src": "7975:174:6",
													"statements": [
														{
															"nativeSrc": "7989:71:6",
															"nodeType": "YulAssignment",
															"src": "7989:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8005:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:6"
																		},
																		"nativeSrc": "8005:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8012:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8012:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8019:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8026:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8026:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8032:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8032:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8022:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8022:3:6"
																		},
																		"nativeSrc": "8022:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8022:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8045:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8045:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8039:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8039:5:6"
																		},
																		"nativeSrc": "8039:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8039:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8052:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8052:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8055:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8055:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8000:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8000:4:6"
																},
																"nativeSrc": "8000:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8000:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "7989:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7989:7:6"
																}
															]
														},
														{
															"nativeSrc": "8073:30:6",
															"nodeType": "YulAssignment",
															"src": "8073:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8087:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8087:14:6"
																},
																"nativeSrc": "8087:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8087:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8073:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8073:10:6"
																}
															]
														},
														{
															"nativeSrc": "8116:23:6",
															"nodeType": "YulAssignment",
															"src": "8116:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8137:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8137:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8131:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8131:5:6"
																},
																"nativeSrc": "8131:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8131:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8116:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8116:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 809,
														"isOffset": false,
														"isSlot": false,
														"src": "8026:4:6",
														"valueSize": 1
													},
													{
														"declaration": 809,
														"isOffset": false,
														"isSlot": false,
														"src": "8045:4:6",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "8073:10:6",
														"valueSize": 1
													},
													{
														"declaration": 821,
														"isOffset": false,
														"isSlot": false,
														"src": "8116:11:6",
														"valueSize": 1
													},
													{
														"declaration": 815,
														"isOffset": false,
														"isSlot": false,
														"src": "7989:7:6",
														"valueSize": 1
													},
													{
														"declaration": 807,
														"isOffset": false,
														"isSlot": false,
														"src": "8012:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 823,
												"nodeType": "InlineAssembly",
												"src": "7950:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8165:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 825,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "8177:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8191:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8177:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 836,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "8228:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8243:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8228:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8177:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 830,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 807,
																						"src": "8203:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$434",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$434",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8195:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 828,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "8195:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8195:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8210:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "8195:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8215:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "8195:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8224:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8195:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 840,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8176:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8165:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 813,
												"id": 842,
												"nodeType": "Return",
												"src": "8158:87:6"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "7276:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "7781:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7812:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "7805:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$434",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 805,
														"name": "IERC20",
														"nameLocations": [
															"7805:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 434,
														"src": "7805:6:6"
													},
													"referencedDeclaration": 434,
													"src": "7805:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$434",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7832:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "7819:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7819:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7804:33:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "7855:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7855:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7854:6:6"
									},
									"scope": 845,
									"src": "7772:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 846,
							"src": "750:7504:6",
							"usedErrors": [
								448,
								457
							],
							"usedEvents": []
						}
					],
					"src": "115:8140:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1104
						],
						"Errors": [
							1156
						]
					},
					"id": 1105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1105,
							"sourceUnit": 1157,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 848,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1156,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 850,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1104,
							"linearizedBaseContracts": [
								1104
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 855,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 865,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1104",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1104",
																		"typeString": "library Address"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 868,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 875,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1104",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1104",
																						"typeString": "library Address"
																					}
																				],
																				"id": 874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 873,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 878,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 870,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1156_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1144,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													884,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 883,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 891,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 885,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 887,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 892,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 894,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1156_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1147,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1104,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 912,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 917,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1104,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1104",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1104",
																		"typeString": "library Address"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 936,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 943,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1104",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1104",
																						"typeString": "library Address"
																					}
																				],
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 941,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 946,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 938,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1156_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1144,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 959,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 955,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 957,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 963,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 965,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 930,
												"id": 967,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1104,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													980,
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 979,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 981,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"id": 985,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 983,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 991,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 988,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 978,
												"id": 993,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1104,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													1006,
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1005,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1007,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"arguments": [
														{
															"id": 1011,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1009,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1014,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1019,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1104,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 1033,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1040,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1044,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1024,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1055,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 1054,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1051,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1024,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1050,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1053,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1056,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1032,
															"id": 1057,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1036,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1035,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1038,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1104,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 1071,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 1078,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1070,
															"id": 1079,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1074,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1073,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1104,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "5598:463:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1089,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "6004:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1095,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "6025:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1156_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6032:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1147,
																	"src": "6025:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6025:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1099,
															"nodeType": "RevertStatement",
															"src": "6018:26:7"
														}
													]
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "5670:385:7",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "5697:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5855:133:7",
																"nodeType": "YulBlock",
																"src": "5855:133:7",
																"statements": [
																	{
																		"nativeSrc": "5873:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5873:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5902:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5902:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5896:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5896:5:7"
																			},
																			"nativeSrc": "5896:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5896:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5877:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5877:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5941:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5941:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5945:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5945:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5937:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5937:3:7"
																					},
																					"nativeSrc": "5937:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5937:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5958:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5958:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:7"
																			},
																			"nativeSrc": "5930:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:44:7"
																		},
																		"nativeSrc": "5930:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5902:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5945:10:7",
																	"valueSize": 1
																}
															],
															"id": 1093,
															"nodeType": "InlineAssembly",
															"src": "5846:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1104,
									"src": "5543:518:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1105,
							"src": "233:5830:7",
							"usedErrors": [
								855
							],
							"usedEvents": []
						}
					],
					"src": "101:5963:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1107,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1134,
							"linearizedBaseContracts": [
								1134
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1114,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1134,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1120,
												"id": 1123,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1134,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1129,
												"id": 1131,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1134,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1135,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1156
						]
					},
					"id": 1157,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "59:254:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality."
							},
							"fullyImplemented": true,
							"id": 1156,
							"linearizedBaseContracts": [
								1156
							],
							"name": "Errors",
							"nameLocation": "322:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "335:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1144,
									"name": "InsufficientBalance",
									"nameLocation": "440:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "468:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "460:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "485:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "477:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:33:9"
									},
									"src": "434:59:9"
								},
								{
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "499:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1147,
									"name": "FailedCall",
									"nameLocation": "599:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:9"
									},
									"src": "593:19:9"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "618:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1150,
									"name": "FailedDeployment",
									"nameLocation": "675:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:9"
									},
									"src": "669:25:9"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "700:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1155,
									"name": "MissingPrecompile",
									"nameLocation": "769:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "787:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:9:9"
									},
									"src": "763:33:9"
								}
							],
							"scope": 1157,
							"src": "314:484:9",
							"usedErrors": [
								1144,
								1147,
								1150,
								1155
							],
							"usedEvents": []
						}
					],
					"src": "33:766:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1168
						]
					},
					"id": 1169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1159,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1168,
							"linearizedBaseContracts": [
								1168
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1168,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1169,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			}
		}
	}
}